P: Qual a função do comando pinMode(ledPin, OUTPUT); no código do Arduino?
A) Lê o valor de uma variável analógica.
B) Define que o pino ledPin será utilizado para leitura de dados.
C) Define que o pino ledPin será utilizado para enviar sinais.
D) Inicia a comunicação serial com o computador.
R: C
E: A função pinMode(pino, OUTPUT) configura o pino digital do Arduino para atuar como saída (output), ou seja, enviará sinais (por exemplo, para acender um LED). A opção A se refere a leitura, a B está incorreta pois INPUT seria o correto, e a D não tem relação com pinMode.

P: O que o comando delay(1000); faz no Arduino?
A) Pausa o código por 1 segundo.
B) Inicia o programa com 1 segundo de atraso.
C) Cria um loop de 1 segundo.
D) Reinicia o Arduino após 1 segundo.
R: A
E: O comando delay(1000); pausa a execução do código por 1000 milissegundos, ou seja, 1 segundo. Não inicia o programa com atraso (B), não reinicia o sistema (D) nem cria um loop (C).

P: O que acontece se usarmos pinMode(3, INPUT); no setup()?
A) O pino 3 será configurado para enviar sinais.
B) O pino 3 será usado como entrada, permitindo ler sensores ou botões.
C) O Arduino irá escrever valores nesse pino.
D) O pino 3 será desativado.
R: B
E: O pinMode(3, INPUT) configura o pino 3 como entrada, o que é necessário quando usamos sensores, botões ou outros dispositivos que enviam sinais para o Arduino. A função não escreve valores (C), nem desativa o pino (D).

P: Qual é a principal função do Serial.begin(9600);?
A) Inicia o sensor ultrassônico.
B) Configura a comunicação serial na velocidade de 9600 bps.
C) Envia comandos para o display.
D) Executa a função de criptografia.
R: B
E: Serial.begin(9600); inicia a comunicação serial entre o Arduino e o computador à taxa de 9600 bits por segundo. Isso permite envio e recepção de dados pela porta USB. Não tem relação com sensores, displays ou criptografia.

P: Qual estrutura está correta para escrever uma mensagem no monitor serial?
A) Serial.output("Olá");
B) Serial.write("Olá");
C) Serial.send("Olá");
D) Serial.println("Olá");
R: D
E: O comando correto para imprimir texto no monitor serial com quebra de linha é Serial.println("Texto");. Serial.write() é usado para bytes, e os outros comandos não existem.

P: Qual comando abaixo mede o tempo que o pino fica em estado HIGH?
A) delay()
B) pulseIn()
C) digitalRead()
D) millis()
R: B
E: pulseIn(pino, HIGH) mede o tempo, em microssegundos, que o pino especificado permaneceu no estado HIGH. Essa função é comumente usada para medir o tempo de retorno de um sinal ultrassônico. As outras alternativas não servem para isso.

P: Se digitalWrite(5, LOW); é executado, o que ocorre com o pino 5?
A) Ele é ativado com 5V.
B) Ele passa a ler dados.
C) Ele é colocado em nível lógico baixo (0V).
D) Ele muda automaticamente para INPUT.
R: C
E: digitalWrite(pino, LOW) faz com que o pino seja colocado em nível lógico baixo, ou seja, 0V. Isso pode desligar um LED, por exemplo. A opção A descreve HIGH, e as demais não estão corretas.

P: O que significa void setup() em um programa Arduino?
A) Define variáveis globais.
B) Cria uma função que será executada várias vezes.
C) Função executada uma única vez ao iniciar o código.
D) Função chamada a cada 1 segundo automaticamente.
R: C
E: void setup() é a função que o Arduino executa uma única vez após ligar ou reiniciar. Normalmente é usada para inicializar configurações, como pinMode e Serial.begin. A função repetida é loop(), não setup().

P: Para alternar entre ligar e desligar um LED, qual comando é essencial?
A) analogRead()
B) digitalRead()
C) digitalWrite()
D) Serial.print()
R: C
E: digitalWrite() permite enviar sinais HIGH ou LOW para pinos de saída, controlando dispositivos como LEDs. analogRead() e digitalRead() são para leitura, e Serial.print() é para exibir mensagens.

P: Qual a finalidade da estrutura while (true) { ... } no Arduino?
A) Executar o código dentro uma vez.
B) Executar continuamente até que uma condição falsa ocorra.
C) Garantir que o loop nunca pare.
D) Impedir que o setup() termine.
R: C
E: A estrutura while (true) cria um laço infinito, garantindo que o código interno seja executado indefinidamente. Essa estrutura é perigosa se mal utilizada, pois pode travar o programa caso não haja forma de sair do laço.

P: No projeto de semáforo com Arduino, qual é a finalidade da variável duracao no trecho abaixo?
duracao = pulseIn(echo, HIGH);
A) Armazenar a distância entre dois carros.
B) Controlar a velocidade da luz do LED.
C) Medir o tempo que o sinal levou para ir e voltar no sensor ultrassônico.
D) Contar quantos carros passaram.
R: C
E: O comando pulseIn(echo, HIGH) mede o tempo que o sinal emitido pelo sensor ultrassônico leva para retornar, permitindo o cálculo da distância até um objeto.

P: No projeto com sensor ultrassônico, o cálculo da distância é feito com a seguinte fórmula:
distancia = duracao * 0.034 / 2;
O que o número 0.034 representa?
A) A velocidade da luz.
B) O tempo total da medição.
C) A velocidade do som em cm/μs.
D) Um valor aleatório usado para delay.
R: C
E: A constante 0.034 representa a velocidade do som no ar em cm por microssegundo (μs), usada para converter o tempo medido (duracao) em distância.

P: O que o código abaixo realiza?
if(distancia <= 40){
  digitalWrite(green, HIGH);
  digitalWrite(red, LOW);
}
A) Acende o LED vermelho se a distância for maior que 40.
B) Mantém todos os LEDs apagados.
C) Acende o LED verde quando um objeto estiver próximo.
D) Desliga o sensor ultrassônico.
R: C
E: O código indica que, se a distância até o objeto for igual ou inferior a 40 cm, o LED verde será aceso e o vermelho desligado, sinalizando "pode passar".

P: Qual é a função de delayMicroseconds(10); logo após digitalWrite(trig, HIGH);?
A) Economizar energia no sistema.
B) Esperar que o LED pisque por 10 segundos.
C) Gerar um pulso de 10 microssegundos no pino trig.
D) Controlar o tempo de comunicação serial.
R: C
E: A linha delayMicroseconds(10); garante que o sinal HIGH enviado ao pino trig dure o tempo necessário para o sensor ultrassônico disparar um pulso.

P: O que aconteceria se digitalWrite(trig, LOW); fosse omitido do código?
A) O Arduino travaria.
B) O sensor ultrassônico não funcionaria corretamente.
C) O LED nunca acenderia.
D) A variável duracao se tornaria uma string.
R: B
E: Sem definir LOW após o HIGH, o sensor pode continuar emitindo sinais ou ficar com leituras imprecisas, pois não há "reset" do pulso.

P: No projeto com LEDs e sensor, qual a finalidade do trecho pinMode(echo, INPUT);?
A) Configurar o pino echo para emitir sinais.
B) Armazenar a distância medida.
C) Permitir que o Arduino receba sinais refletidos do sensor.
D) Estabelecer a velocidade de leitura.
R: C
E: O pino echo precisa estar em modo de entrada (INPUT) para receber o sinal refletido pelo obstáculo e medir o tempo decorrido.

P: O sensor ultrassônico utilizado mede a distância por meio de:
A) Luz infravermelha.
B) Reflexo de som.
C) Campo magnético.
D) Micro-ondas.
R: B
E: O sensor emite ondas sonoras ultrassônicas e mede o tempo até que elas retornem ao sensor após refletirem em um objeto.

P: Suponha que a distância medida seja 100 cm. Qual bloco de código será executado?
if(distancia <= 40){
  digitalWrite(green, HIGH);
  digitalWrite(red, LOW);
} else {
  digitalWrite(red, HIGH);
  digitalWrite(green, LOW);
}
A) Acende LED verde.
B) Acende LED vermelho.
C) Acende ambos.
D) Apaga ambos.
R: B
E: Como 100 > 40, o programa executará o bloco else, acendendo o LED vermelho e apagando o verde.

P: O sensor ultrassônico do projeto mede distâncias com base em:
A) Cálculo de tempo e velocidade da luz.
B) Contagem de objetos em movimento.
C) Tempo de ida e volta das ondas sonoras.
D) Corrente elétrica no pino red.
R: C
E: O sensor emite um som e mede quanto tempo leva até o som bater em um objeto e voltar, permitindo calcular a distância.

P: Por que usamos float nas variáveis distancia e duracao?
A) Para armazenar apenas números inteiros.
B) Porque o Arduino não reconhece int.
C) Para lidar com números decimais.
D) Para armazenar letras e textos.
R: C
E: float é utilizado quando precisamos de valores com casas decimais, como distâncias em centímetros, que não são inteiros.

P: O que acontece dentro da função setup() em um código Arduino?
A) A lógica principal do programa é executada repetidamente.
B) O Arduino entra em modo de espera.
C) A configuração inicial dos pinos e variáveis ocorre.
D) Os sensores são desligados automaticamente.
R: C
E: A função setup() roda uma única vez quando o Arduino é ligado ou reiniciado, sendo usada para definir pinos como entrada ou saída e configurar variáveis.

P: Qual a principal diferença entre as funções setup() e loop() no Arduino?
A) setup() é usada para cálculos matemáticos; loop() para entrada de dados.
B) setup() é executada repetidamente; loop() apenas uma vez.
C) setup() é para configurações iniciais; loop() roda continuamente enquanto o Arduino estiver ligado.
D) Ambas são obrigatórias e fazem a mesma coisa.
R: C
E: setup() serve para inicializações e loop() para executar a lógica principal de forma contínua.

P: A função pinMode(pin, OUTPUT); define o pino como:
A) Conector USB.
B) Entrada de dados.
C) Saída para controlar dispositivos como LEDs.
D) Sensor de luz.
R: C
E: Com OUTPUT, o pino pode enviar sinais elétricos, como acender um LED ou ativar um motor.

P: O que digitalWrite(pin, HIGH); faz com o pino configurado como saída?
A) Envia um sinal analógico.
B) Desliga o pino.
C) Envia tensão (5V) para o pino, ativando o dispositivo conectado.
D) Coloca o Arduino em modo de espera.
R: C
E: HIGH significa nível lógico alto (5V), utilizado para energizar componentes eletrônicos.

P: Em um projeto de semáforo com Arduino, por que usar if/else em vez de while?
A) if/else permite travar o programa.
B) if/else é usado para decisões pontuais, enquanto while é mais usado para repetições contínuas.
C) while é mais simples que if/else.
D) if/else é exclusivo do Arduino.
R: B
E: if/else é usado para avaliar condições pontuais e tomar decisões baseadas nos valores atuais, sem prender o código num laço.

P: No contexto de sensores ultrassônicos, o termo “trigger” refere-se a:
A) A função do LED.
B) O nome do objeto medido.
C) O pino que envia o pulso sonoro.
D) O cálculo de distância.
R: C
E: “Trigger” (gatilho) é o pino que envia o pulso de som no sensor ultrassônico, iniciando a medição.

P: No sensor HC-SR04, o pino “echo” serve para:
A) Enviar dados via Bluetooth.
B) Receber o som refletido e medir o tempo de retorno.
C) Desligar o sensor quando não usado.
D) Controlar a luminosidade do LED.
R: B
E: O “echo” detecta o tempo que o som levou para voltar após refletir em um obstáculo, e esse valor é usado para calcular a distância.

P: Quando o LED verde acende e o vermelho apaga no projeto, o que isso indica?
A) O sensor está com defeito.
B) Não há objetos na frente.
C) Um objeto está a até 40 cm de distância.
D) A distância é maior que 1 metro.
R: C
E: O LED verde indica que o caminho está livre apenas até 40 cm. Depois disso, o vermelho toma o lugar.

P: Qual seria uma forma correta de ligar um LED no Arduino?
A) O positivo no GND e o negativo no pino digital.
B) O positivo no pino digital e o negativo com resistor no GND.
C) Ligar diretamente ao pino analógico.
D) Ligar nos dois extremos da bateria.
R: B
E: LEDs devem ser conectados com o anodo (positivo) no pino digital e o catodo (negativo) no GND com resistor para limitar a corrente.

P: O que pode ocorrer se não for usado um resistor ao ligar um LED no Arduino?
A) O LED piscará mais forte.
B) O LED durará mais tempo.
C) Pode queimar o LED e danificar a porta do Arduino.
D) Nada acontece.
R: C
E: Sem resistor, a corrente passa sem controle, podendo queimar o LED e causar sobrecarga no pino do Arduino.

P: Qual é a função do comando pinMode(led, OUTPUT); em um código Arduino?
A) Ler dados analógicos do LED
B) Atribuir valor alto ou baixo ao LED
C) Definir o pino como entrada de sinal
D) Definir o pino como saída de sinal
R: D
E: A resposta correta é D porque o comando pinMode(pino, OUTPUT); configura um pino específico do Arduino como saída, permitindo que você envie sinais elétricos (como acender um LED). Isso é essencial antes de usar digitalWrite().

P: O que acontece se você usar digitalWrite(pino, HIGH); sem ter configurado o pino antes com pinMode(pino, OUTPUT);?
A) O código entra em erro de compilação
B) O pino será configurado automaticamente como saída
C) O LED pode não acender ou funcionar de forma instável
D) O programa ignora o comando
R: C
E: A resposta correta é C porque, se o pino não for configurado como saída, o Arduino pode não saber como tratá-lo, o que pode causar comportamento imprevisível — como o LED não acender ou piscar de forma incorreta.

P: Qual é o principal propósito da função setup() no Arduino?
A) Repetir comandos indefinidamente
B) Inicializar variáveis apenas quando for necessário
C) Executar comandos de inicialização uma única vez
D) Receber entradas analógicas contínuas
R: C
E: A resposta correta é C porque a função setup() é chamada uma única vez no início do programa e serve para inicializar configurações, como definir os modos dos pinos ou iniciar a comunicação serial.

P: Em um programa Arduino, o que significa delay(1000);?
A) Um atraso de 1000 segundos
B) Um atraso de 100 milissegundos
C) Um atraso de 1 segundo
D) Um atraso indefinido
R: C
E: A resposta correta é C porque o comando delay(valor); usa milissegundos como unidade. Portanto, delay(1000); cria uma pausa de 1 segundo antes da próxima linha ser executada.

P: Qual é o tipo de variável correto para armazenar a leitura de um sensor de distância com precisão decimal?
A) int
B) char
C) boolean
D) float
R: D
E: A resposta correta é D porque o tipo float armazena números com ponto flutuante (decimais), ideal para sensores que fornecem medidas como 30.42 cm. O tipo int só armazena números inteiros, o que limitaria a precisão.

P: O comando digitalRead(pino); é utilizado para:
A) Escrever um valor digital em um pino
B) Ler valores analógicos de um pino
C) Ler se um pino digital está em estado ALTO ou BAIXO
D) Configurar o pino como entrada
R: C
E: A resposta correta é C porque digitalRead(pino); retorna o estado atual do pino digital, se está em HIGH (1) ou LOW (0), o que é essencial para ler botões, sensores e outros dispositivos digitais.

P: O que é necessário para fazer com que um botão funcione corretamente como entrada no Arduino?
A) Conectar o botão a um pino analógico e usar analogRead()
B) Configurar o botão com pinMode(pino, OUTPUT)
C) Usar pinMode(pino, INPUT_PULLUP) e lógica invertida
D) Conectar o botão apenas ao GND
R: C
E: A resposta correta é C porque a prática comum com botões no Arduino é usar INPUT_PULLUP, que ativa um resistor interno. Isso significa que o botão "pressionado" gera um sinal LOW e solto gera HIGH, invertendo a lógica padrão.

P: Qual comando inicia a comunicação entre o Arduino e o computador via porta serial?
A) Serial.read();
B) Serial.begin(9600);
C) digitalWrite(Serial, HIGH);
D) begin.serial(9600);
R: B
E: A resposta correta é B porque Serial.begin(9600); configura a taxa de transmissão de dados (baud rate), geralmente 9600 bits por segundo, para que o Arduino envie e receba dados do monitor serial.

P: Qual componente é comumente usado no Arduino para simular um semáforo?
A) Servomotor
B) LEDs de diferentes cores
C) Display LCD
D) Sensor de distância
R: B
E: A resposta correta é B porque o semáforo de pedestres é comumente representado com LEDs vermelhos, verdes e às vezes amarelos, conectados a diferentes pinos do Arduino para simular as luzes de trânsito.

P: O que representa o comando digitalWrite(red, HIGH); dentro do contexto de um semáforo?
A) Desliga o LED vermelho
B) Liga o LED vermelho
C) Alterna o LED entre ligado e desligado
D) Liga todos os LEDs ao mesmo tempo
R: B
E: A resposta correta é B porque digitalWrite(red, HIGH); envia tensão para o pino do LED vermelho, acendendo-o. O estado HIGH indica que o LED está ligado.

P: O que o comando delay(5000); faz em um projeto de semáforo?
A) Gera um atraso de 5 minutos
B) Espera 5 segundos antes de mudar a luz
C) Reinicia o programa
D) Cria uma piscada no LED
R: B
E: A resposta correta é B porque delay(5000); indica uma pausa de 5.000 milissegundos = 5 segundos, geralmente usada para manter o LED aceso por esse tempo antes da próxima mudança.

P: Por que o loop() é fundamental em um semáforo com Arduino?
A) Porque define os pinos digitais
B) Porque impede que o programa reinicie
C) Porque permite a repetição contínua da lógica de mudança das luzes
D) Porque controla a velocidade de transmissão serial
R: C
E: A resposta correta é C porque o loop() repete indefinidamente a lógica programada, permitindo simular o ciclo contínuo de um semáforo de pedestres.

P: Qual seria a ordem lógica de funcionamento de um semáforo simples com pedestre?
A) Verde → Amarelo → Vermelho
B) Vermelho → Verde → Amarelo
C) Vermelho → Amarelo → Verde
D) Verde → Vermelho → Amarelo
R: A
E: A resposta correta é A porque a sequência Verde (andar) → Amarelo (atenção) → Vermelho (parar) é a mais comum em semáforos, inclusive nos exemplos discutidos em aula.

P: Para alternar entre dois LEDs com atraso, o que é necessário?
A) Usar apenas um pino para os dois LEDs
B) Usar digitalRead() e loop()
C) Usar digitalWrite() para desligar um e ligar o outro com delay() entre eles
D) Usar analogWrite() e for
R: C
E: A resposta correta é C porque, para simular a troca de luzes, é comum usar digitalWrite(led1, LOW); digitalWrite(led2, HIGH); delay(tempo); para alternar e manter o efeito realista.

P: O que pode acontecer se todos os LEDs estiverem ligados simultaneamente no semáforo?
A) Nenhum problema ocorrerá
B) O pedestre terá clareza sobre o que fazer
C) Pode causar confusão, já que os sinais se contradizem
D) O semáforo entrará em modo de emergência
R: C
E: A resposta correta é C porque acender luzes vermelha e verde ao mesmo tempo, por exemplo, pode causar confusão ao pedestre, representando uma falha lógica no código.

P: Como evitar que o LED fique ligado para sempre após o primeiro HIGH?
A) Utilizar delay(0);
B) Colocar LOW antes do HIGH
C) Acompanhar o digitalWrite(pino, HIGH); com delay() e depois digitalWrite(pino, LOW);
D) Usar break; no código
R: C
E: A resposta correta é C porque, para o LED não ficar permanentemente aceso, é necessário desligá-lo manualmente usando digitalWrite(pino, LOW); após o tempo desejado.

P: No código apresentado nas aulas, por que o pino 1 foi usado para o LED vermelho?
A) Porque o pino 1 é o único com PWM
B) Porque é o padrão para semáforo
C) Porque o pino 1 está ligado à comunicação serial, o que foi um erro
D) Porque ele está ao lado do pino 0
R: C
E: A resposta correta é C porque o uso do pino 1 no Arduino interfere na comunicação serial, algo alertado nas aulas. Ele deve ser evitado em projetos que usam Serial.begin().

P: Qual é a função dos pinos trig e echo mesmo quando o foco é o semáforo?
A) Monitorar a energia dos LEDs
B) Medir distância para acionar a troca das luzes
C) Acionar o botão de pedestre
D) Fazer a contagem regressiva
R: B
E: A resposta correta é B porque em alguns projetos de semáforo inteligente, o sensor ultrassônico (com trig e echo) mede a distância do pedestre, e assim pode acionar o ciclo de luzes.

P: Qual a principal função do sensor ultrassônico no Arduino?
A) Detectar luz ambiente
B) Medir a umidade do ar
C) Medir a distância de objetos usando ondas sonoras
D) Controlar temperatura
R: C
E: A resposta correta é C porque o sensor ultrassônico envia ondas sonoras e mede o tempo que elas demoram para retornar, permitindo o cálculo da distância até um objeto.

P: No sensor ultrassônico, qual o papel do pino trig?
A) Receber os dados de retorno
B) Enviar o sinal sonoro
C) Ligar o LED
D) Calcular a velocidade do som
R: B
E: A resposta correta é B porque o trig (de trigger) é responsável por emitir o pulso ultrassônico inicial que será refletido pelo objeto.

P: O pino echo é responsável por:
A) Acionar o sensor
B) Calcular a distância
C) Receber o sinal refletido de volta
D) Medir temperatura
R: C
E: A resposta correta é C porque o pino echo recebe o sinal de volta após o pulso ser refletido por um objeto, permitindo o cálculo da distância.

P: O cálculo distancia = duracao * 0.034 / 2 representa:
A) O tempo total do sinal
B) A potência sonora emitida
C) A distância baseada no tempo e na velocidade do som
D) A velocidade do Arduino
R: C
E: A resposta correta é C porque a equação usa o tempo medido (duracao) e a velocidade do som (aproximadamente 0.034 cm/μs) para calcular a distância. O valor é dividido por 2 porque o sinal vai e volta.

P: Qual comando é usado para medir o tempo de retorno do sinal ultrassônico?
A) digitalRead()
B) pulseIn()
C) analogRead()
D) millis()
R: B
E: A resposta correta é B porque pulseIn(echo, HIGH) mede o tempo, em microssegundos, que o pino echo ficou em nível alto, o que representa o tempo de ida e volta da onda.

P: Qual tipo de dado é usado para armazenar a variável distancia?
A) int
B) float
C) char
D) boolean
R: B
E: A resposta correta é B porque float permite valores com casas decimais, fundamentais para medições mais precisas de distância, como 34.5 cm.

P: Por que o valor da distância é dividido por 2 na fórmula?
A) Porque o sensor está com baixa voltagem
B) Para compensar o atraso do Arduino
C) Porque a onda percorre o trajeto de ida e volta
D) Para corrigir o valor para centímetros
R: C
E: A resposta correta é C porque o tempo registrado pelo sensor refere-se ao trajeto completo da onda sonora (ida e volta), e a distância até o objeto é metade disso.

P: Se a distância lida for menor que 40 cm, qual LED será aceso no exemplo do código da aula?
A) Vermelho
B) Azul
C) Verde
D) Amarelo
R: C
E: A resposta correta é C porque, segundo o código, quando a distância for menor ou igual a 40 cm, o LED verde será aceso para indicar que o objeto está próximo.

P: Qual erro comum deve ser evitado ao usar os pinos 0 e 1 com sensores ou LEDs?
A) Eles não têm sinal digital
B) São pinos reservados para comunicação serial
C) Não suportam corrente suficiente
D) Estão desativados por padrão
R: B
E: A resposta correta é B porque os pinos 0 (RX) e 1 (TX) são usados pela comunicação serial (Serial.begin()), podendo causar conflitos com sensores ou LEDs.

P: O que acontece se o sensor estiver muito perto do objeto (por exemplo, a menos de 2 cm)?
A) Mede com maior precisão
B) Pode não detectar o objeto corretamente
C) Sempre retorna 0 cm
D) O sensor se desliga
R: B
E: A resposta correta é B porque sensores ultrassônicos têm uma distância mínima de operação, e abaixo dela podem não captar o eco corretamente, resultando em medições incorretas ou nulas.

P: Qual a função do comando Serial.begin(9600); no Arduino?
A) Finaliza a comunicação serial
B) Inicia a comunicação serial com velocidade de 9600 bauds
C) Lê informações da porta digital
D) Acende o LED da placa
R: B
E: A resposta correta é B porque Serial.begin(9600); configura a velocidade da comunicação serial entre o Arduino e o computador para leitura e escrita via monitor serial.

P: Qual comando usamos para mostrar dados no monitor serial?
A) digitalRead()
B) analogWrite()
C) Serial.print()
D) Serial.read()
R: C
E: A resposta correta é C porque Serial.print() é o comando utilizado para enviar informações ao monitor serial, permitindo acompanhar valores de variáveis em tempo real.

P: O botão conectado a uma entrada digital do Arduino pode ser lido com qual função?
A) digitalWrite()
B) digitalRead()
C) analogRead()
D) Serial.read()
R: B
E: A resposta correta é B porque digitalRead() permite verificar se um botão está pressionado (HIGH) ou não (LOW) ao ler o valor lógico do pino.

P: O que o comando Serial.read() faz?
A) Envia dados para o Arduino
B) Lê entradas analógicas
C) Lê um caractere digitado no monitor serial
D) Ativa a leitura digital dos botões
R: C
E: A resposta correta é C porque Serial.read() é usado para capturar dados enviados pelo teclado no monitor serial, geralmente caracteres.

P: Se um botão está ligado ao pino 5 e pressionado, o que digitalRead(5) retorna?
A) LOW
B) 0
C) HIGH
D) -1
R: C
E: A resposta correta é C porque, ao pressionar o botão, se ele estiver corretamente conectado com resistor de pull-down, o pino fica em nível HIGH (1).

P: Para acionar um LED conectado ao pino 7 ao pressionar um botão no pino 2, qual trecho de código é correto?
A) digitalWrite(2, HIGH);
B) if (digitalRead(2) == HIGH) { digitalWrite(7, HIGH); }
C) if (digitalWrite(2) == HIGH) { digitalWrite(7, LOW); }
D) digitalRead(7, HIGH);
R: B
E: A resposta correta é B porque o botão deve ser lido com digitalRead() e, se estiver pressionado, o LED deve ser acionado com digitalWrite().

P: Qual estrutura correta para ler continuamente o valor de um botão no loop?
A) while (1) { Serial.begin(9600); }
B) if (Serial.print == HIGH)
C) loop() { digitalRead(); }
D) void loop() { int estado = digitalRead(botao); }
R: D
E: A resposta correta é D porque é necessário usar a função digitalRead() dentro do loop() para capturar continuamente o estado do botão.

P: O que acontece se usarmos Serial.read() sem verificar se há dados disponíveis com Serial.available()?
A) O código trava permanentemente
B) O Arduino reinicia
C) Pode haver erro ou leitura de valores inválidos
D) Nada acontece
R: C
E: A resposta correta é C porque ler a porta serial sem verificar se há algo disponível pode resultar em leituras incorretas ou -1, o que não representa um caractere válido.

P: Se Serial.read() retorna um valor igual a 'a', como posso verificar isso no código?
A) if (Serial.read = 'a')
B) if (Serial.read() == 'a')
C) if Serial.read('a') == true
D) Serial.print('a') == true
R: B
E: A resposta correta é B porque para comparar caracteres, usamos Serial.read() dentro de um if e comparamos com 'a' usando ==.

P: Qual estrutura correta para acender um LED via caractere enviado pelo teclado (por ex., 'l')?
A) if (Serial.print() == 'l')
B) if (Serial.available() > 0 && Serial.read() == 'l') { digitalWrite(LED, HIGH); }
C) digitalRead() = 'l';
D) Serial.begin();
R: B
E: A resposta correta é B porque a leitura correta deve verificar se há dados disponíveis com Serial.available() antes de ler com Serial.read().

P: Qual a principal função de um display de 7 segmentos no Arduino?
A) Controlar motores de passo
B) Mostrar números de 0 a 9 em formato visual
C) Receber entradas analógicas
D) Estabilizar a corrente do circuito
R: B
E: A resposta correta é B porque o display de 7 segmentos serve para exibir números (e alguns caracteres) ligando combinações de segmentos de LED.

P: Quantos segmentos individuais há em um display de 7 segmentos comum?
A) 5
B) 6
C) 7
D) 8
R: D
E: A resposta correta é D porque, além dos 7 segmentos de letras (a a g), existe um oitavo ponto (DP - decimal point) que também pode ser controlado.

P: Para acender o número “1” em um display de 7 segmentos, quais segmentos devem estar ligados?
A) a, b
B) b, c
C) c, d
D) a, d
R: B
E: A resposta correta é B porque o número 1 é formado acendendo os segmentos b e c, que ficam à direita.

P: O que é necessário para controlar corretamente cada segmento do display com o Arduino?
A) Um sensor de temperatura
B) Um resistor por segmento
C) Um capacitor ligado ao GND
D) Um botão conectado ao display
R: B
E: A resposta correta é B porque cada segmento é um LED, e portanto requer um resistor para limitar a corrente e evitar queimar o componente.

P: Qual pino do Arduino pode ser usado para acionar um segmento do display?
A) Apenas pinos analógicos
B) Qualquer pino digital configurado como OUTPUT
C) Apenas o pino 13
D) Apenas pinos PWM
R: B
E: A resposta correta é B porque qualquer pino digital configurado como saída (OUTPUT) pode ser usado para controlar um segmento do display.

P: Para formar o número “8” no display, qual a condição correta?
A) Apenas segmento g ligado
B) Todos os segmentos desligados
C) Todos os segmentos ligados
D) Apenas os segmentos a a f
R: C
E: A resposta correta é C porque o número 8 é o único dígito que acende todos os 7 segmentos (a a g) ao mesmo tempo.

P: Se o display não acende nenhum segmento, o que pode estar errado?
A) O loop está vazio
B) O botão está pressionado
C) O resistor está com resistência muito alta ou está faltando
D) O sensor está invertido
R: C
E: A resposta correta é C porque, sem o resistor adequado ou com um valor muito alto, a corrente pode ser insuficiente para acender os LEDs dos segmentos.

P: Qual é a diferença entre display de 7 segmentos com cátodo comum e ânodo comum?
A) Um é analógico e outro digital
B) Um liga com LOW, outro com HIGH nos pinos
C) Um usa mais memória
D) Não existe diferença
R: B
E: A resposta correta é B porque:
No cátodo comum, os segmentos acendem com nível lógico HIGH.
No ânodo comum, os segmentos acendem com nível lógico LOW.

P: Ao montar um display 7 segmentos com Arduino, o que acontece se dois segmentos forem ligados no mesmo pino digital?
A) Eles acendem alternadamente
B) Só um deles acende
C) Os dois acendem juntos, mas o controle individual é perdido
D) O Arduino queima
R: C
E: A resposta correta é C porque ambos os segmentos acenderão juntos sempre que o pino for ativado, e não será possível controlá-los separadamente.

P: Qual é o objetivo de usar arrays para controlar um display de 7 segmentos no Arduino?
A) Reduzir o número de pinos do Arduino
B) Evitar o uso de resistores
C) Organizar os padrões dos números de forma eficiente
D) Evitar a função digitalWrite()
R: C
E: A resposta correta é C porque, com arrays, é possível mapear os padrões de acendimento de cada número e tornar o código mais organizado e reutilizável.

P: O que é criptografia no contexto do Arduino?
A) Um comando de controle de motores
B) Uma técnica para codificar dados antes de transmitir
C) Uma função de delay do sistema
D) Um tipo de display usado para exibir caracteres
R: B
E: A resposta correta é B porque criptografia é o processo de esconder ou codificar dados, garantindo que somente quem souber a chave consiga interpretá-los.

P: Qual tipo de criptografia foi usada nas aulas práticas com Arduino?
A) Hash SHA-256
B) Cifra de César
C) AES-128
D) RSA
R: B
E: A resposta correta é B. A Cifra de César é uma criptografia simples onde as letras são deslocadas no alfabeto, sendo ideal para implementações básicas como as feitas no Arduino.

P: Como funciona a Cifra de César usada no Arduino?
A) Cada letra é substituída por um número binário
B) Cada caractere é deslocado um número fixo de posições no alfabeto
C) Cada palavra é revertida
D) Os caracteres são embaralhados aleatoriamente
R: B
E: A resposta correta é B porque a Cifra de César consiste em deslocar cada letra para frente ou para trás no alfabeto segundo uma chave numérica.

P: Se a letra 'A' for criptografada com chave 3 na cifra de César, qual será o resultado?
A) D
B) C
C) F
D) G
R: A
E: A resposta correta é A porque, com chave 3, o caractere ‘A’ é deslocado três posições no alfabeto, resultando em ‘D’.

P: Para descriptografar uma mensagem com cifra de César no Arduino, o que é necessário?
A) Conhecer o tipo de placa usada
B) Subtrair o valor da chave de cada letra
C) Usar o comando delay()
D) Inserir um resistor de 220Ω
R: B
E: A resposta correta é B. A descriptografia inverte a operação: subtrai a chave usada durante a criptografia, restaurando a mensagem original.

P: Qual é a principal limitação da cifra de César?
A) É incompatível com displays LCD
B) É difícil de implementar
C) Pode ser facilmente quebrada por tentativa e erro
D) Exige muitos sensores
R: C
E: A resposta correta é C porque a cifra de César possui um número pequeno de combinações possíveis (geralmente 25 chaves), sendo vulnerável a ataques por força bruta.

P: Qual função no Arduino permite ler o texto digitado no Serial Monitor?
A) digitalRead()
B) analogRead()
C) Serial.readString()
D) print()
R: C
E: A resposta correta é C. A função Serial.readString() lê dados em forma de texto vindos do monitor serial, sendo usada para capturar o que o usuário digitou.

P: Ao criptografar usando Arduino e Serial, como os caracteres são manipulados no código?
A) São armazenados em sensores
B) São convertidos em números e somados à chave
C) São ignorados e substituídos por ‘*’
D) São multiplicados por dois
R: B
E: A resposta correta é B porque o código converte caracteres em códigos numéricos (ASCII) e soma o valor da chave para deslocar a letra.

P: Qual estrutura de repetição pode ser usada para criptografar letra por letra em uma String?
A) switch-case
B) if-else
C) for
D) goto
R: C
E: A resposta correta é C porque a estrutura for permite percorrer a String caractere por caractere, sendo ideal para aplicar a lógica da criptografia.

P: Em uma mensagem criptografada com chave 3, como decodificar no Arduino?
A) Adicionando 3 ao valor ASCII
B) Subtraindo 3 do valor ASCII
C) Multiplicando por 3
D) Dividindo o código por 3
R: B
E: A resposta correta é B porque a descriptografia consiste em reverter o deslocamento, subtraindo a chave aplicada na criptografia.

P: Qual biblioteca foi usada para exibir informações em um display LCD no Arduino?
A) Servo.h
B) Adafruit_LiquidCrystal
C) Stepper.h
D) LiquidCrystal_I2C
R: B
E: A resposta correta é B. A biblioteca Adafruit_LiquidCrystal permite controlar displays LCD, principalmente quando conectados via I2C, facilitando a exibição de textos no Arduino.

P: Qual comando é usado para iniciar o uso do LCD no código com a biblioteca Adafruit?
A) lcd.begin()
B) lcd.init()
C) lcd.start()
D) lcd.display()
R: A
E: A resposta correta é A porque lcd.begin() inicializa o LCD com a quantidade de colunas e linhas informadas (por exemplo, lcd.begin(16, 2) para um display 16x2).

P: O que significa ‘16x2’ ao configurar um display LCD?
A) 16 pixels por linha e 2 pixels por caractere
B) 16 colunas e 2 linhas de caracteres
C) 16 linhas e 2 colunas de dados binários
D) 16 bytes e 2 bits por caractere
R: B
E: A resposta correta é B. Um display 16x2 possui 16 colunas e 2 linhas, ou seja, pode exibir 32 caracteres no total (em duas linhas).

P: Qual pino do Arduino é utilizado para enviar dados a um display LCD com módulo I2C?
A) Apenas os digitais comuns
B) RX e TX
C) Pinos A4 e A5 (SDA e SCL)
D) Pinos PWM
R: C
E: A resposta correta é C porque a comunicação I2C no Arduino Uno é feita via SDA (A4) e SCL (A5), que são os pinos padrão para conexão de dispositivos I2C como displays LCD.

P: O que o comando lcd.print("Oi") faz no Arduino?
A) Envia um som pelo buzzer
B) Exibe o texto “Oi” no monitor serial
C) Mostra o texto “Oi” no display LCD
D) Grava o texto na EEPROM
R: C
E: A resposta correta é C. O comando lcd.print("Oi") exibe o texto diretamente no display LCD, sendo a função principal da biblioteca Adafruit.

P: Para mudar a posição do cursor antes de imprimir algo no LCD, qual comando é usado?
A) lcd.move()
B) lcd.select()
C) lcd.setCursor()
D) lcd.next()
R: C
E: A resposta correta é C porque o comando lcd.setCursor(coluna, linha) posiciona o cursor onde o texto será exibido, por exemplo, lcd.setCursor(0, 1).

P: O que acontece se a quantidade de caracteres ultrapassar a largura da tela do LCD?
A) O Arduino entra em erro
B) O texto se move automaticamente para a próxima linha
C) Os caracteres adicionais não aparecem
D) O texto vira minúsculo
R: C
E: A resposta correta é C. Quando o número de caracteres ultrapassa o limite (ex: 16 em uma linha), os excedentes não são exibidos, pois o LCD não possui rolagem automática.

P: Para apagar o conteúdo do LCD, qual comando deve ser usado?
A) lcd.clear()
B) lcd.erase()
C) lcd.reset()
D) lcd.stop()
R: A
E: A resposta correta é A. O comando lcd.clear() apaga o conteúdo atual do display, limpando todas as linhas.

P: Qual comando é necessário no setup() para inicializar a comunicação serial usada para depuração junto com o LCD?
A) Serial.clear(9600)
B) Serial.init(115200)
C) Serial.begin(9600)
D) Serial.set(9600)
R: C
E: A resposta correta é C. O comando Serial.begin(9600) inicializa a comunicação serial com o monitor para mostrar mensagens, útil ao depurar o funcionamento do LCD.

P: O display LCD I2C exige menos fios que o tradicional porque:
A) Ele usa conexão Bluetooth
B) Ele se comunica via infravermelho
C) Usa apenas dois pinos (SDA e SCL) para se comunicar
D) É alimentado por bateria
R: C
E: A resposta correta é C. O módulo I2C simplifica a conexão com o Arduino, utilizando apenas dois fios (SDA e SCL), ao contrário dos muitos pinos necessários em displays paralelos.

P: Qual estrutura de decisão foi mais utilizada nas aulas com Arduino para definir comportamentos com sensores?
A) for
B) while
C) if/else
D) switch
R: C
E: A resposta correta é C. A estrutura if/else foi amplamente utilizada para verificar condições como distância de sensores, estados de botões ou comparação de valores lógicos.

P: O que significa distancia <= 40 no contexto do sensor ultrassônico?
A) A distância medida é superior a 40 cm
B) A variável distância foi dividida por 40
C) A distância lida é menor ou igual a 40 cm
D) O sensor parou de funcionar após 40 cm
R: C
E: A resposta correta é C. A expressão distancia <= 40 representa uma condição booleana que verifica se o valor da variável distancia é menor ou igual a 40.

P: Qual das alternativas representa uma estrutura de repetição condicional usada para repetir algo enquanto uma condição for verdadeira?
A) if/else
B) switch
C) while
D) loop
R: C
E: A resposta correta é C. A estrutura while repete um bloco de código enquanto uma condição for verdadeira, muito útil em sensores ou leitura de dados até uma parada lógica.

P: A estrutura for é mais adequada quando:
A) Precisamos verificar uma condição uma única vez
B) Queremos repetir um código infinitamente
C) Sabemos o número de vezes que um código deve se repetir
D) A condição depende de sensores externos
R: C
E: A resposta correta é C. O for é ideal quando o número de repetições é conhecido, como acender um LED 10 vezes ou contar de 0 a 9.

P: O que significa a instrução digitalWrite(red, HIGH); em termos de lógica booleana?
A) Define a variável red como verdadeira
B) Atribui 1 lógico à saída conectada ao pino red
C) Compara a variável red com o valor HIGH
D) Verifica se o LED está aceso
R: B
E: A resposta correta é B. O comando digitalWrite(pino, HIGH) envia nível lógico 1 (5V) ao pino, ativando um componente como um LED.

P: O operador && significa:
A) Ou lógico
B) Soma
C) E lógico (and)
D) Negação
R: C
E: A resposta correta é C. O operador && representa a lógica E (and), retornando verdadeiro somente quando ambas as condições forem verdadeiras.

P: Qual destas opções representa um operador de comparação?
A) =
B) ==
C) ++
D) +=
R: B
E: A resposta correta é B. == é o operador que compara igualdade de valores, enquanto = é de atribuição. Usar = em uma comparação é erro comum em lógica.

P: Em qual caso usamos o operador ! em lógica de programação no Arduino?
A) Para multiplicar
B) Para inverter uma condição lógica
C) Para somar duas variáveis
D) Para definir o fim de um loop
R: B
E: A resposta correta é B. O operador ! é usado para negação lógica, transformando true em false e vice-versa. Por exemplo, if (!botao) verifica se o botão não está pressionado.

P: Qual destas expressões retorna true apenas quando ambas as variáveis são true?
A) a || b
B) a && b
C) a == b
D) !a || b
R: B
E: A resposta correta é B. A expressão a && b retorna verdadeiro somente se a e b forem ambas verdadeiras (lógica E).

P: Qual comando é usado para repetir continuamente o programa no Arduino?
A) loop()
B) repeat()
C) forever()
D) function()
R: A
E: A resposta correta é A. A função loop() é executada em repetição infinita no Arduino após a execução do setup(), sendo a base de qualquer programa.

P: Em um programa Arduino, como podemos representar uma lógica que acende o LED apenas quando um botão está pressionado E a distância lida é menor que 20 cm?
A) if (botao && distancia > 20)
B) if (botao && distancia < 20)
C) if (botao || distancia < 20)
D) if (!botao && distancia < 20)
R: B
E: A resposta correta é B. A lógica correta utiliza o operador && (E lógico) para exigir que ambas as condições sejam verdadeiras.

P: Qual é a principal consequência de esquecer um bloco de fechamento {} em uma estrutura condicional if com mais de uma linha?
A) O código será mais eficiente
B) Somente a primeira linha será considerada dentro do if
C) O Arduino vai entender normalmente
D) A condição se aplica a todas as linhas seguintes
R: B
E: A resposta correta é B. No Arduino (e em C++), sem {}, apenas a primeira linha após o if será executada condicionalmente, o que pode causar erros lógicos no programa.

P: O que acontece se colocarmos um if dentro de outro if?
A) O código trava
B) O segundo if substitui o primeiro
C) Criamos uma estrutura de decisão aninhada (nested)
D) Nada, pois isso não é permitido
R: C
E: A resposta correta é C. Isso é chamado de estrutura aninhada, permitindo decisões mais específicas dependendo da combinação de várias condições.

P: Qual comando usamos para interromper um loop ou sair de uma repetição antes do final?
A) stop
B) exit
C) continue
D) break
R: D
E: A resposta correta é D. O break encerra imediatamente o for, while ou switch atual, útil para parar repetições com base em uma condição.

P: Em qual situação devemos utilizar else if?
A) Quando queremos repetir um bloco até uma condição ser satisfeita
B) Quando temos várias possibilidades de decisão, exclusivas entre si
C) Quando queremos inverter a lógica de uma condição
D) Quando usamos switch
R: B
E: A resposta correta é B. O else if é ideal para lidar com múltiplas condições alternativas, cada uma sendo testada em sequência, como faixas de distância ou níveis de intensidade.

P: Qual palavra-chave é usada para declarar uma função no Arduino?
A) define
B) call
C) void
D) setup
R: C
E: A palavra-chave void indica que a função não retorna valor. Toda função personalizada começa com o tipo de retorno.

P: O que significa criar uma função no Arduino?
A) Declarar variáveis dentro do loop()
B) Criar um código que se repete automaticamente
C) Escrever um conjunto de comandos reutilizáveis
D) Adicionar novos sensores ao Arduino
R: C
E: Criar uma função é uma forma de organizar e reutilizar comandos, melhorando a clareza e manutenção do código.

P: Em qual parte do código uma função personalizada deve ser criada?
A) Dentro do loop()
B) Dentro do setup()
C) Antes ou depois do setup() e loop()
D) Apenas no final do código
R: C
E: Podemos declarar funções antes ou depois das principais, desde que estejam declaradas corretamente ou com protótipo.

P: O que acontece se chamarmos uma função que ainda não foi declarada nem prototipada?
A) Nada acontece
B) O Arduino executa outra função
C) O compilador mostra erro
D) O programa roda mais devagar
R: C
E: O compilador exige que todas as funções estejam declaradas ou prototipadas antes do uso.

P: Qual destas opções é um exemplo válido de função personalizada que acende um LED?
A) void acenderLed() { digitalWrite(13, HIGH); }
B) acenderLed { pinMode(13, HIGH); }
C) function acenderLed() = { on(13); }
D) acenderLed = function() { digitalWrite(13, HIGH); }
R: A
E: A opção A segue corretamente a sintaxe do Arduino/C++, começando com void, nome, parênteses e bloco {}.

P: Qual a vantagem de usar funções personalizadas em projetos Arduino mais complexos?
A) Deixar o código mais longo
B) Aumentar o consumo de memória
C) Organizar o código e facilitar a reutilização
D) Permitir mais delays
R: C
E: Funções ajudam a dividir o projeto em partes lógicas, facilitando o teste e a manutenção.

P: O que acontece se uma função personalizada for chamada dentro de si mesma sem controle adequado?
A) Nada
B) O código trava por loop infinito
C) O Arduino reinicia e ignora a função
D) O compilador remove a função
R: B
E: Chamadas recursivas sem condições de parada causam travamentos ou estouro de pilha, pois a função se chama infinitamente.

P: Como passar um valor para dentro de uma função no Arduino?
A) Usando variáveis globais
B) Declarando o valor como public
C) Utilizando parâmetros nos parênteses da função
D) Definindo dentro do setup()
R: C
E: Passar valores via parâmetros torna as funções reutilizáveis com diferentes entradas, como void piscar(int vezes).

P: O que é necessário para uma função retornar um valor?
A) Usar return e declarar um tipo de retorno (ex: int)
B) Incluir break no final
C) Colocar output = true
D) Criar uma variável global
R: A
E: A função deve ter um tipo de retorno (como int, float, etc.) e usar a instrução return valor.

P: Em int somar(int a, int b) { return a + b; }, o que essa função faz?
A) Retorna a multiplicação de dois números
B) Retorna o valor de b
C) Retorna a soma dos parâmetros a e b
D) Retorna o valor 0
R: C
E: A função retorna a soma de dois inteiros passados como argumento, útil para cálculos reutilizáveis.

P: Em que situação pode ocorrer erro ao chamar uma função personalizada?
A) Quando o nome da função for em português
B) Quando a função não tem delay()
C) Quando há conflito de tipos entre parâmetros e argumentos
D) Quando a função está antes do setup()
R: C
E: Se uma função espera int e recebe float, o compilador pode acusar erro ou fazer conversão indesejada.

P: O que ocorre se uma função for definida como int calcula() mas não usar return?
A) Retorna 0 automaticamente
B) Retorna null
C) O compilador gera erro
D) O valor do loop() é usado por padrão
R: C
E: Em funções com tipo de retorno, o uso de return é obrigatório. A ausência causa erro de compilação.

P: Qual é a principal diferença entre void e int ao declarar funções no Arduino?
A) void retorna qualquer tipo; int só números
B) int é mais rápido
C) void não retorna valor; int retorna número inteiro
D) void só funciona em setup()
R: C
E: void indica que a função não devolve nenhum valor, enquanto int exige que um número inteiro seja retornado.

P: Por que pode ser útil dividir o código do loop() em várias funções?
A) Para rodar múltiplos setup()
B) Para reduzir a velocidade de execução
C) Para tornar o código modular e mais fácil de testar
D) Para aumentar o consumo de energia do Arduino
R: C
E: Modificar o loop() em várias funções facilita testes, leitura e depuração, sendo uma prática comum em projetos complexos.

P: Se temos uma função ligarLed(int pino) e a chamamos com ligarLed(7.5), o que pode acontecer?
A) O código converte automaticamente
B) O Arduino não aceita pinos flutuantes
C) Erro de compilação por tipo incompatível
D) O LED acende normalmente
R: C
E: Passar um valor do tipo float para int pode causar erro de compilação ou comportamento inesperado, pois pinos são inteiros.

P: Qual comando é utilizado para aumentar o valor de uma variável em 1 no Arduino?
A) var + 1;
B) increment(var);
C) var++;
D) var += 0;
R: C
E: var++ é uma forma abreviada e padrão de incrementar uma variável em 1 no Arduino/C++.

P: Em um projeto com contador, qual tipo de variável normalmente usamos para contar?
A) char
B) int
C) boolean
D) float
R: B
E: A variável int (inteiro) é a mais apropriada para contar, pois armazena números inteiros positivos e negativos.

P: Qual estrutura condicional usamos para verificar se o sensor foi ativado?
A) when()
B) loop()
C) if()
D) check()
R: C
E: if() é a estrutura condicional que permite testar se uma condição é verdadeira para executar um bloco de código.

P: O que representa digitalRead(pino)?
A) Ativa um pino digital
B) Lê o estado (ALTO ou BAIXO) de um pino digital
C) Escreve valor no pino digital
D) Lê um valor analógico
R: B
E: digitalRead() é usada para ler se um pino digital está recebendo sinal (HIGH ou LOW).

P: Qual é o objetivo de usar um contador com sensor no Arduino?
A) Armazenar texto
B) Fazer delay em milissegundos
C) Medir a quantidade de ativações de um sensor
D) Reforçar a conexão serial
R: C
E: Contadores com sensor são usados para medir quantas vezes um evento ocorre, como a passagem de um objeto.

P: Se um objeto ativa o sensor muitas vezes rapidamente, o que pode ser necessário no código?
A) Aumentar a tensão da porta
B) Adicionar delay para evitar contagem múltipla
C) Usar digitalWrite()
D) Resetar o Arduino
R: B
E: Um pequeno delay() ou lógica antirruído evita contagens duplicadas por oscilações rápidas.

P: O que acontece se não inicializarmos o contador com um valor inicial?
A) Ele inicia com 1
B) Inicia com valor aleatório
C) Começa com o valor 0 automaticamente
D) Pode conter lixo de memória
R: D
E: Variáveis não inicializadas podem conter valores indeterminados, o que prejudica o funcionamento correto do contador.

P: Como podemos visualizar o valor do contador em tempo real no computador?
A) Pela função visualCount()
B) Através do Serial Monitor usando Serial.println()
C) Por LEDs no pino 13
D) Usando comandos de voz
R: B
E: O Serial Monitor exibe dados do Arduino enviados por Serial.println(), ideal para verificar contagens e variáveis.

P: Qual é o propósito de usar Serial.begin(9600); no setup()?
A) Inicializar o sensor
B) Começar a contagem
C) Configurar a comunicação serial com o computador
D) Ativar o contador
R: C
E: Serial.begin(9600); define a velocidade da comunicação serial, necessária para que Serial.print() funcione corretamente.

P: Qual seria um bom lugar no código para zerar o contador?
A) Dentro do setup()
B) Em um botão reset
C) Usar contador = 0; em uma condição específica
D) Todas as anteriores
R: D
E: O contador pode ser zerado no início do código, por botão ou por lógica, dependendo do propósito do projeto.

P: Qual problema pode ocorrer se o sensor ativar enquanto o Arduino ainda está executando o código do loop()?
A) Nada acontece
B) A contagem pode ser perdida
C) O sensor queima
D) O Arduino trava
R: B
E: Eventos muito rápidos podem ser ignorados se não houver controle adequado, como interrupções ou debounce.

P: Qual comando usaria para mostrar o valor da variável contador na porta serial?
A) Serial.output(contador);
B) Serial.display(contador);
C) Serial.println(contador);
D) ShowSerial(contador);
R: C
E: Serial.println() envia o conteúdo da variável para o Serial Monitor e quebra a linha após o valor.

P: Como garantir que o contador só incremente uma vez por ativação do sensor?
A) Utilizando apenas digitalRead()
B) Com uma variável de estado anterior e lógica de borda de subida
C) Com digitalWrite()
D) Usando delay fixo
R: B
E: Para evitar contagens múltiplas, comparamos o estado atual e o anterior do sensor e só incrementamos quando ocorre a transição.

P: Por que pode ser arriscado depender apenas do delay() para evitar múltiplas contagens?
A) Porque delay() desliga sensores
B) Porque impede o uso de Serial.print()
C) Porque congela o código, impedindo respostas rápidas
D) Porque consome energia demais
R: C
E: delay() interrompe a execução do código, podendo fazer com que eventos rápidos sejam perdidos. Soluções melhores incluem lógica de tempo com millis() ou interrupções.

P: Se quisermos que o contador reinicie automaticamente após atingir 10 ativações, qual comando podemos usar?
A) if (contador == 10) contador = 0;
B) while (contador < 10)
C) contador == 10; reset();
D) contador.stop();
R: A
E: A lógica condicional if (contador == 10) contador = 0; reinicia o contador quando ele atinge o valor desejado.

P: O que é o Arduino e qual foi seu objetivo original de criação?
A) Um tipo de processador industrial
B) Um microcontrolador voltado a profissionais de engenharia
C) Uma plataforma de prototipagem eletrônica de código aberto
D) Um software de simulação de sensores
R: C
E: A resposta correta é C porque o Arduino é uma plataforma de prototipagem eletrônica open-source criada para facilitar o uso de eletrônica e programação em projetos interativos, inicialmente voltado para artistas, designers e iniciantes.

P: O que são Sistemas Ciber-Físicos (CPS)?
A) Softwares de modelagem digital
B) Sistemas que integram computação e processos físicos
C) Equipamentos de automação sem controle computacional
D) Máquinas que operam unicamente por sensores
R: B
E: A resposta correta é B porque os CPS integram processos computacionais com processos físicos por meio de sensores e atuadores, permitindo controle inteligente e em tempo real.

P: Onde os sistemas embarcados são comumente aplicados?
A) Apenas em robótica industrial
B) Em qualquer sistema que envolva sensores e microcontroladores, como carros, eletrodomésticos e sistemas médicos
C) Somente em laboratórios científicos
D) Apenas em smartphones e computadores
R: B
E: A resposta correta é B porque sistemas embarcados estão presentes em diversos equipamentos do dia a dia, como veículos, aparelhos médicos, máquinas industriais e eletrônicos domésticos, sendo integrados a sensores e atuadores.

P: Quem criou o Arduino e por quê?
A) Um grupo de engenheiros da Intel para criar um novo chip
B) Uma equipe de designers italianos para baratear projetos eletrônicos
C) A NASA, para uso em satélites
D) Um laboratório japonês para robôs domésticos
R: B
E: A resposta correta é B porque o Arduino foi criado na Itália por Massimo Banzi e colegas para tornar a prototipagem eletrônica mais acessível a pessoas sem formação técnica avançada, como artistas e estudantes.

P: O que é o Arduino?
A) Um sistema operacional para placas embarcadas
B) Uma linguagem de programação para controle de robôs
C) Uma plataforma de prototipagem eletrônica de código aberto
D) Um software para simular circuitos no computador
R: C
E: A resposta correta é C porque o Arduino é uma plataforma de prototipagem que combina hardware (placas) e software (IDE), sendo livre e voltada para facilitar a criação de projetos eletrônicos interativos.

P: Qual foi o objetivo inicial da criação do Arduino?
A) Criar um substituto para microcontroladores comerciais
B) Tornar a prototipagem acessível para artistas, estudantes e iniciantes
C) Desenvolver um sistema embarcado para uso militar
D) Concorrer com o Raspberry Pi no ensino técnico
R: B
E: O Arduino foi criado para democratizar o acesso à eletrônica e à programação, especialmente entre pessoas sem formação técnica, como artistas e designers.

P: Em que país o Arduino foi desenvolvido?
A) Alemanha
B) Estados Unidos
C) Japão
D) Itália
R: D
E: A resposta correta é D porque o Arduino foi criado na cidade de Ivrea, na Itália, por Massimo Banzi e sua equipe.

P: O que são Sistemas Ciber-Físicos (CPS)?
A) Sistemas que controlam somente elementos virtuais
B) Equipamentos analógicos que operam sem software
C) Sistemas que integram software e hardware para interagir com o mundo físico
D) Plataformas para jogos digitais com simulação de física
R: C
E: Sistemas Ciber-Físicos integram elementos computacionais (software) com componentes físicos (motores, sensores), permitindo ações automáticas e inteligentes em tempo real.

P: Qual das opções a seguir é um exemplo de Sistema Ciber-Físico?
A) Um editor de texto
B) Um micro-ondas com controle automático de tempo e temperatura
C) Um arquivo em PDF
D) Um pendrive
R: B
E: A resposta correta é B porque o micro-ondas detecta condições físicas e reage com lógica computacional, um comportamento típico de CPS.

P: Qual das opções abaixo NÃO é uma aplicação comum de sistemas embarcados?
A) Controle de temperatura em geladeiras
B) Leitor de código de barras em supermercados
C) Impressão de documentos em nuvem
D) Sistema de freios ABS em automóveis
R: C
E: Impressão em nuvem envolve sistemas de rede e servidores, mas não é considerada uma aplicação típica de sistemas embarcados, que atuam diretamente em dispositivos físicos.

P: O que define um sistema embarcado?
A) Um computador independente com sistema operacional multitarefa
B) Um sistema de controle dedicado, embutido em um dispositivo físico
C) Um aplicativo de celular com acesso à internet
D) Uma linguagem de programação para jogos
R: B
E: A resposta correta é B porque sistemas embarcados são circuitos eletrônicos com software dedicado que realizam tarefas específicas dentro de dispositivos maiores.

P: Em quais áreas os sistemas embarcados são amplamente utilizados?
A) Apenas em dispositivos militares
B) Apenas em celulares e computadores
C) Em áreas como automóveis, medicina, eletrodomésticos e automação industrial
D) Exclusivamente em laboratórios acadêmicos
R: C
E: Os sistemas embarcados estão presentes em praticamente todas as áreas tecnológicas modernas, desde sensores em carros até aparelhos hospitalares.

P: Qual é a função principal de um display de 7 segmentos em um projeto com Arduino?
A) Medir temperatura
B) Controlar motores
C) Exibir números e caracteres simples
D) Enviar sinais de rádio
R: C
E: O display de 7 segmentos é usado principalmente para mostrar números e letras simples, funcionando como uma pequena tela digital.

P: Quantos LEDs estão presentes em um display de 7 segmentos tradicional (sem ponto decimal)?
A) 6
B) 7
C) 8
D) 10
R: B
E: Um display tradicional tem 7 LEDs dispostos em forma de “8”, cada um representando um segmento controlável individualmente.

P: Qual a diferença entre um display de 7 segmentos de cátodo comum e um de ânodo comum?
A) O cátodo comum tem segmentos que piscam; o ânodo não.
B) O cátodo comum acende os LEDs com nível alto; o ânodo com nível baixo.
C) O cátodo comum compartilha o terminal positivo; o ânodo compartilha o negativo.
D) O cátodo comum compartilha o terminal negativo; o ânodo compartilha o positivo.
R: D
E: A resposta correta é D: o cátodo comum tem todos os cátodos (terminais negativos) ligados juntos, enquanto o ânodo comum une os terminais positivos.

P: Se você deseja exibir o número “4” em um display de 7 segmentos, quais segmentos devem ser ativados?
A) a, b, c, f, g
B) b, c, f, g
C) a, c, d, e, g
D) b, c, e, g
R: B
E: O número 4 é exibido ativando os segmentos b, c, f e g — formando as bordas verticais da direita e o meio.

P: Em projetos mais complexos com vários dígitos, é comum usar displays multiplexados. O que isso significa?
A) Vários displays acesos simultaneamente, cada um com um Arduino próprio
B) Um único display mostra vários caracteres ao mesmo tempo
C) Vários displays são acionados rapidamente um por vez, criando a ilusão de simultaneidade
D) Displays que funcionam apenas com circuitos analógicos
R: C
E: A multiplexação permite controlar vários displays com poucos pinos, ativando um dígito por vez rapidamente, de forma que pareçam todos acesos simultaneamente ao olho humano.

P: Qual comando no Arduino é usado para acender um segmento de um display de 7 segmentos quando conectado a uma porta digital?
A) analogWrite(pino, HIGH);
B) digitalWrite(pino, HIGH);
C) segmentWrite(pino, ON);
D) displayWrite(7);
R: B
E: Para acender qualquer LED ou segmento, usa-se o comando digitalWrite(pino, HIGH) — ou LOW, dependendo do tipo de display.

P: Por que é importante usar resistores ao ligar os pinos do Arduino aos segmentos do display?
A) Para impedir que o display aqueça
B) Para acelerar a resposta dos LEDs
C) Para limitar a corrente e proteger os LEDs e o Arduino
D) Para permitir que o display funcione com Bluetooth
R: C
E: Os resistores limitam a corrente elétrica nos LEDs, evitando sobrecarga que pode queimar o display ou danificar a porta do Arduino.

P: Qual é o conceito básico de criptografia aplicado nos exemplos com Arduino apresentados em aula?
A) Substituição de sensores por senhas
B) Reorganização de displays de 7 segmentos
C) Substituição de caracteres por outros com base em seu código ASCII
D) Compressão de dados com comandos binários
R: C
E: A lógica de criptografia usada nas aulas foi a substituição de caracteres, baseada no valor ASCII de cada letra (por exemplo, somar ou subtrair um valor).

P: Qual função em C/C++ é normalmente usada para manipular strings (cadeias de texto) em projetos de criptografia com Arduino?
A) readString()
B) parseInt()
C) Serial.begin()
D) strcpy(), strcat(), strlen()
R: D
E: Funções como strcpy(), strcat(), strlen() são comuns para copiar, concatenar e medir strings, essenciais em manipulação de mensagens criptografadas.

P: Na lógica explicada em aula, o que aconteceria com a letra ‘A’ (ASCII 65) ao ser criptografada somando 3 unidades?
A) ‘C’
B) ‘B’
C) ‘D’
D) ‘E’
R: C
E: Se somarmos 3 ao valor ASCII de ‘A’ (65), obtemos 68, que corresponde à letra ‘D’.

P: Qual estrutura de controle é frequentemente usada para percorrer uma string e criptografar caractere por caractere?
A) if/else
B) while
C) for
D) switch
R: C
E: O laço for permite percorrer cada caractere de uma string por índice, ideal para aplicar a lógica de criptografia.

P: O que o termo “descriptografia” significa no contexto dos códigos usados nas aulas?
A) Deletar os dados salvos na EEPROM
B) Converter números para letras
C) Inverter o processo da criptografia, retornando à mensagem original
D) Ler dados de sensores e convertê-los em texto
R: C
E: Descriptografar é fazer o processo reverso da criptografia, subtraindo (em vez de somar) o valor que foi adicionado ao texto original.

P: Em um código de exemplo, foi usada uma função personalizada chamada criptografar(). Qual era o objetivo de criar uma função separada?
A) Para ativar sensores automaticamente
B) Para modularizar o código e reutilizar a lógica de criptografia
C) Para garantir comunicação serial entre placas
D) Para evitar delays
R: B
E: Usar funções separadas permite organizar o código, tornar a criptografia reutilizável e facilita a manutenção e testes.

P: Qual é a vantagem de aplicar criptografia simples em projetos Arduino que trocam mensagens entre dispositivos?
A) Aumenta o tempo de resposta
B) Permite usar sensores analógicos
C) Protege dados contra interceptações básicas
D) Reduz o consumo de energia
R: C
E: Embora básica, essa criptografia protege os dados contra leituras diretas, útil em projetos que envolvem comunicação serial entre placas.

P: Qual é o principal objetivo de usar a biblioteca Adafruit em projetos com LCD no Arduino?
A) Substituir o uso de sensores analógicos
B) Facilitar o controle e escrita em displays LCD
C) Ativar comunicação Bluetooth
D) Reduzir o número de variáveis globais
R: B
E: A biblioteca Adafruit_LiquidCrystal torna mais simples comandos como print(), setCursor(), clear() e outros para exibir informações em LCD.

P: Antes de usar a biblioteca Adafruit com LCD, o que é necessário incluir no código?
A) #include <Serial.h>
B) #include <Adafruit_LiquidCrystal.h>
C) #include <LiquidCrystal_I2C.h>
D) #include <Wire.h> apenas
R: B
E: A linha #include <Adafruit_LiquidCrystal.h> importa a biblioteca adequada. É comum também ver a biblioteca Wire.h para comunicação I2C, mas a específica para o LCD Adafruit é essa.

P: Qual é o método usado para posicionar o cursor no LCD antes de imprimir algo?
A) lcd.moveCursor()
B) lcd.setCursor(col, row)
C) lcd.pointTo(x, y)
D) lcd.cursorAt()
R: B
E: O método correto é lcd.setCursor(coluna, linha), começando em (0, 0) no canto superior esquerdo.

P: Em projetos com LCD, o que a função lcd.begin(16, 2) normalmente indica?
A) Define que o display tem 16 linhas e 2 colunas
B) Inicia o display e define que ele tem 16 colunas e 2 linhas
C) Limpa o conteúdo do display
D) Conecta o display à porta COM 16
R: B
E: A função lcd.begin(16, 2) inicializa o display com 16 colunas e 2 linhas. Essa é a dimensão mais comum de LCDs usados em projetos básicos.

P: Após escrever lcd.print("Olá Mundo"), o que acontece no display LCD?
A) O display reinicia
B) A frase "Olá Mundo" aparece na posição atual do cursor
C) A mensagem aparece invertida
D) Nenhum efeito ocorre sem lcd.write()
R: B
E: O método print() exibe o texto na posição onde o cursor estiver. Para controlar onde isso acontece, usa-se lcd.setCursor() antes.

P: Qual dessas boas práticas foi destacada nas aulas ao trabalhar com LCD e mensagens variáveis?
A) Nunca usar lcd.clear() para evitar travamentos
B) Evitar mudar o cursor de posição
C) Usar lcd.clear() ou sobrescrever o texto para evitar mensagens sobrepostas
D) Usar delays grandes para que o texto seja visível
R: C
E: Quando o conteúdo do display muda frequentemente (como mensagens com sensores), é importante limpar o display antes de escrever novamente ou escrever espaços para apagar resíduos de textos anteriores.

P: Se você quiser exibir a distância captada por um sensor ultrassônico em tempo real em um LCD, qual seria a sequência correta de passos?
A) Ler a distância → lcd.print() diretamente
B) lcd.clear() → lcd.setCursor() → lcd.print() com a distância
C) lcd.begin() → lcd.delay() → mostrar a distância
D) Definir o pino do LCD como OUTPUT
R: B
E: Para atualizar dados em tempo real, é recomendável usar lcd.clear(), mover o cursor com setCursor(), e só então lcd.print() o valor.

P: O que acontece se não usarmos else após um if no Arduino?
A) O programa trava
B) A próxima condição será ignorada
C) O código funcionará normalmente, apenas não terá comportamento alternativo
D) O Arduino entra em loop infinito
R: C
E: O else é opcional. Se não for utilizado, o código só executará o que está dentro do if quando a condição for verdadeira. Se for falsa, ele apenas pula para o próximo bloco de código.

P: Qual a vantagem de usar estruturas else if em vez de múltiplos if independentes?
A) Ocupa mais memória
B) Deixa o código mais lento
C) Evita que condições desnecessárias sejam testadas após uma já ser satisfeita
D) Permite múltiplas ações simultâneas
R: C
E: Quando usamos else if, assim que uma condição é verdadeira, as demais são ignoradas, o que torna o código mais eficiente.

P: Qual função pode ser usada para converter um número inteiro para string no Arduino?
A) convert()
B) str()
C) String()
D) toText()
R: C
E: No Arduino, o construtor String() pode ser usado para converter números inteiros ou valores numéricos em uma string de texto, por exemplo: String(valor).

P: Em qual situação o operador && deve ser utilizado?
A) Para comparar dois números
B) Para verificar se pelo menos uma condição é verdadeira
C) Para executar uma ação apenas se duas condições forem verdadeiras ao mesmo tempo
D) Para negar uma condição
R: C
E: O operador && (E lógico) exige que ambas as condições comparadas sejam verdadeiras para que o bloco de código seja executado.

P: O que o comando return faz dentro de uma função personalizada no Arduino?
A) Interrompe o loop principal
B) Finaliza a execução do programa
C) Devolve um valor e encerra a função
D) Reinicia o código do Arduino
R: C
E: return encerra uma função e opcionalmente retorna um valor. É essencial quando funções são usadas para cálculos ou verificações que precisam entregar um resultado.

P: Ao usar if (x = 5) em vez de if (x == 5), o que pode acontecer?
A) O código funciona normalmente
B) A comparação é correta, pois = e == são equivalentes
C) O valor 5 será atribuído à variável x, e a condição sempre será verdadeira
D) Um erro de compilação será gerado
R: C
E: = é o operador de atribuição, não de comparação. Esse erro é comum: ele atribui o valor 5 a x, e como 5 é um valor “verdadeiro”, o if será sempre executado.

P: Por que é considerado má prática usar delay() excessivamente no Arduino?
A) Porque reduz a legibilidade do código
B) Porque pode queimar o microcontrolador
C) Porque impede que outras tarefas sejam executadas durante a pausa
D) Porque altera o consumo de memória RAM
R: C
E: O delay() trava a execução do programa pelo tempo determinado, impedindo que outras leituras de sensores ou funções sejam realizadas nesse período. Prefere-se usar técnicas com millis() em projetos mais complexos.

P: Qual a principal vantagem de criar funções personalizadas no Arduino?
A) Aumentar o tamanho do código
B) Reduzir a performance do microcontrolador
C) Tornar o código mais organizado, reutilizável e fácil de manter
D) Eliminar o uso de variáveis globais
R: C
E: Funções personalizadas ajudam a modularizar o código, facilitam o reuso e tornam o programa mais compreensível e organizado.

P: Qual a estrutura básica para criar uma função personalizada no Arduino?
A) loop() { }
B) função nome() { }
C) tipo nome() { }
D) begin nome() { }
R: C
E: Uma função é declarada com um tipo de retorno (como void, int etc.), seguido do nome e dos parênteses:
Exemplo: void piscarLED() { /* código */ }.

P: O que significa o uso de void na declaração de uma função?
A) Que a função está vazia
B) Que a função será executada apenas uma vez
C) Que a função não retorna nenhum valor
D) Que a função será ignorada pelo compilador
R: C
E: void indica que a função não devolverá nenhum valor. Muito comum em funções que apenas realizam ações, como acender LEDs ou imprimir textos.

P: Como passamos informações para uma função no Arduino?
A) Usando define()
B) Usando variáveis globais
C) Através de parâmetros entre parênteses
D) Declarando a função dentro do setup()
R: C
E: Parâmetros são declarados dentro dos parênteses da função. Exemplo: void piscarLED(int tempo).

P: Uma função personalizada pode chamar outra função dentro de si?
A) Não, isso causa erro
B) Sim, desde que não sejam funções do sistema
C) Sim, inclusive o loop() pode ser chamado
D) Sim, inclusive outras funções personalizadas
R: D
E: Funções podem ser chamadas dentro de outras funções, inclusive funções que você mesmo criou. Isso é uma prática comum e poderosa.

P: O que pode acontecer se você criar duas funções com o mesmo nome, mas parâmetros diferentes?
A) O código funciona normalmente
B) O compilador acusa erro, pois o Arduino não suporta sobrecarga de funções
C) A função com menos parâmetros é ignorada
D) Ambas as funções são executadas ao mesmo tempo
R: B
E: A linguagem usada no Arduino (C/C++) não permite sobrecarga de funções da forma como linguagens modernas permitem, especialmente sem configuração especial. Isso gera conflito e erro de compilação.

P: Qual dessas opções é um bom exemplo de função personalizada para piscar um LED com tempo variável?
A) void piscarLED(int tempo) { digitalWrite(13, HIGH); delay(tempo); digitalWrite(13, LOW); delay(tempo); }
B) piscarLED() { on(); wait(); off(); wait(); }
C) int tempo { piscar(); }
D) loop() piscarLED();
R: A
E: O código A define corretamente a função com parâmetro e executa a lógica de piscar o LED, usando digitalWrite() e delay() com valor ajustável.

P: Qual é a lógica mais comum para implementar um contador com sensor ultrassônico no Arduino?
A) Somar 1 sempre que o LED estiver aceso
B) Subtrair 1 ao detectar objetos
C) Incrementar o contador quando um objeto entra em uma determinada distância
D) Repetir a função loop() várias vezes
R: C
E: A lógica mais comum envolve monitorar a distância de objetos e, ao detectar entrada dentro de um limite (ex: 30 cm), incrementar o contador.

P: Para evitar contagens múltiplas acidentais com o mesmo objeto parado, o que deve ser adicionado ao código?
A) Um delay(1000) após cada contagem
B) Um LED que apague após a leitura
C) Uma condição para verificar a variação da distância ou uma flag de controle
D) Nada, isso não pode ser evitado
R: C
E: O ideal é criar um controle que detecte apenas a transição (por exemplo, objeto que entra e sai), usando flags ou lógica condicional, evitando contagens repetidas.

P: Como podemos imprimir a contagem na porta serial?
A) Serial.show(contagem)
B) Serial.begin(contagem)
C) Serial.print("Contagem: "); Serial.println(contagem);
D) Serial.start(contagem)
R: C
E: O comando Serial.print() seguido de Serial.println() imprime texto e valores de variáveis na tela do monitor serial.

P: Qual variável seria mais apropriada para armazenar a quantidade de vezes que o sensor detectou movimento?
A) bool
B) float
C) int
D) char
R: C
E: Um contador deve usar int, que permite armazenar valores inteiros crescentes de forma simples.

P: O que faz a função pulseIn(echo, HIGH) no contexto de um sensor ultrassônico?
A) Conta quantas vezes o sensor foi acionado
B) Retorna a distância em centímetros
C) Mede o tempo que o sinal leva para voltar após ser refletido por um objeto
D) Pisca um LED quando um som é emitido
R: C
E: Essa função mede a duração do sinal refletido em microsegundos, essencial para calcular a distância com base na velocidade do som.

P: O que deve ser feito no código para que a contagem seja exibida somente quando mudar?
A) Adicionar if (contagem > 0)
B) Comparar com uma variável de contagem anterior e só imprimir se for diferente
C) Usar delay(100)
D) Remover o Serial.begin()
R: B
E: Para exibir apenas quando houver mudança, compara-se a contagem atual com a anterior, evitando repetições desnecessárias na tela.

P: Em qual função o contador deve ser zerado, se quisermos que ele recomece a cada reinício do Arduino?
A) loop()
B) void piscar()
C) setup()
D) serialMonitor()
R: C
E: A função setup() é executada uma única vez quando o Arduino reinicia. Ideal para inicializações como contador = 0;.

P: Em um sistema real de contagem de pessoas usando Arduino e sensor ultrassônico, o que pode afetar negativamente a precisão?
A) Colocar o sensor perto da porta
B) A velocidade do Arduino
C) Objetos parados dentro da área de leitura
D) Utilizar Serial.println()
R: C
E: Objetos parados podem gerar leituras contínuas e falsos positivos se o código não tratar a lógica de entrada e saída corretamente.

P: O que caracteriza um sistema distribuído?
A) Um único computador realizando várias tarefas simultâneas
B) Um conjunto de computadores independentes cooperando para um objetivo comum
C) Um servidor central controlando todos os clientes conectados
D) Um único banco de dados acessado remotamente
R: B
E: A resposta correta é B porque sistemas distribuídos envolvem múltiplos computadores que colaboram entre si, cada um executando partes de uma tarefa ou compartilhando recursos.

P: Qual dos modelos abaixo sofre com maior risco de gargalo no servidor?
A) P2P com super nós
B) P2P sem tracker
C) Cliente-servidor
D) P2P com DHT
R: C
E: A resposta correta é C porque, no modelo cliente-servidor, há um único ponto de controle que concentra todas as requisições, criando gargalos em performance.

P: Qual é uma das principais vantagens do modelo P2P em relação ao cliente-servidor?
A) Permite menos controle sobre os dados compartilhados
B) Requer um servidor dedicado com alta capacidade
C) Escalabilidade inerente, pois mais clientes geram mais recursos
D) Uso de menos conexões entre os nós
R: C
E: A resposta correta é C porque o modelo P2P se beneficia do aumento de clientes, pois cada cliente também colabora com recursos, melhorando a escalabilidade.

P: O que são sistemas P2P (Peer-to-Peer)?
A) Sistemas baseados em servidores que distribuem tarefas
B) Sistemas em que todos os nós têm funções similares e se comunicam diretamente
C) Sistemas centralizados com múltiplas entradas simultâneas
D) Redes sem nenhum tipo de estrutura ou organização
R: B
E: A resposta correta é B porque os sistemas P2P operam com nós que atuam tanto como clientes quanto como servidores, trocando informações entre si diretamente.

P: O que dificulta a administração de sistemas P2P puros?
A) Baixa escalabilidade
B) Necessidade constante de supervisão manual
C) Entrada e saída frequente de nós e necessidade de localizar recursos dinamicamente
D) Alto custo com servidores centralizados
R: C
E: A resposta correta é C porque, em redes P2P, os nós mudam frequentemente, o que exige mecanismos eficientes para localizar dados e manter o sistema funcional.

P: Qual é o papel de um super nó em redes P2P?
A) Servir como cliente e servidor ao mesmo tempo
B) Auxiliar na indexação de conteúdos e conexões de outros nós
C) Controlar toda a rede como um servidor mestre
D) Atuar como roteador físico da rede
R: B
E: A resposta correta é B porque super nós funcionam como hubs mais robustos dentro de redes P2P, ajudando na organização e localização de recursos.

P: Qual é uma desvantagem do uso de servidores auxiliares em redes P2P?
A) Redução da escalabilidade
B) Dificuldade em manter a segurança
C) Risco de criar pontos de falha
D) Alta descentralização da rede
R: C
E: A resposta correta é C porque servidores auxiliares, embora úteis para localização de recursos, criam pontos centrais que podem ser alvos de falha ou ataques.

P: Em um sistema P2P puramente descentralizado, como ocorre a busca por dados?
A) Por meio de servidores de indexação
B) Através de um algoritmo baseado em localização geográfica
C) Usando uma rede central de metadados
D) Via conexões aleatórias entre nós até encontrar o dado desejado
R: D
E: A resposta correta é D porque em sistemas totalmente descentralizados, como Gnutella original, a busca é feita propagando pedidos até que o dado seja encontrado.

P: Qual das opções abaixo representa corretamente um exemplo de P2P com super nós?
A) Napster
B) Skype original
C) BitTorrent com tracker
D) Gnutella original
R: B
E: A resposta correta é B porque o Skype original utilizava super nós para facilitar a comunicação entre os usuários e a indexação das conexões.

P: Qual tipo de estratégia de busca organiza os dados com base em hash e localização específica?
A) Busca semiestruturada
B) Busca aleatória distribuída
C) Busca estruturada com DHT
D) Busca manual e direta
R: C
E: A resposta correta é C porque a busca estruturada com DHT utiliza funções hash para distribuir os dados de maneira eficiente e previsível na rede.

P: O que é uma rede sobreposta (overlay) em sistemas P2P?
A) Uma rede que substitui totalmente a internet
B) Uma camada física adicional conectando os dispositivos
C) Uma rede lógica criada sobre a rede física para conectar os nós
D) Um servidor alternativo para garantir redundância
R: C
E: A resposta correta é C porque uma rede sobreposta (overlay) é uma estrutura lógica usada para organizar a comunicação entre nós, independentemente da topologia física da rede.

P: Em qual tipo de organização os nós P2P têm as mesmas funções e nenhuma coordenação central?
A) Organização com super nós
B) Organização puramente descentralizada
C) Organização com servidor auxiliar
D) Organização híbrida
R: B
E: A resposta correta é B porque na organização puramente descentralizada, todos os nós têm funções equivalentes e não há nenhum tipo de controle centralizado.

P: Qual dos seguintes é um exemplo de sistema P2P com servidor auxiliar?
A) BitTorrent com tracker
B) Gnutella original
C) Skype original
D) Chord
R: A
E: A resposta correta é A porque o BitTorrent com tracker utiliza um servidor auxiliar para facilitar a localização dos peers antes que eles se comuniquem diretamente.

P: O que torna a administração de redes P2P mais complexa em relação a redes centralizadas?
A) A baixa disponibilidade de conexão à internet
B) A lentidão das transferências de dados
C) A dinâmica de entrada e saída constante de nós
D) A falta de usuários conectados
R: C
E: A resposta correta é C porque os nós entram e saem frequentemente da rede, exigindo mecanismos eficientes de descoberta, localização e consistência de dados.

P: O que diferencia a busca estruturada da busca não estruturada em redes P2P?
A) Uso de criptografia em ambas
B) A existência de um servidor fixo para consultas
C) A organização previsível dos dados em locais definidos por hash
D) A descentralização da transferência de arquivos
R: C
E: A resposta correta é C porque na busca estruturada, como a DHT, os dados são armazenados de forma previsível usando funções de hash, o que permite buscas mais eficientes.

P: O que significa DHT em redes P2P?
A) Distributed Host Transmission
B) Digital Host Tracker
C) Distributed Hash Table
D) Data Handling Technique
R: C
E: A resposta correta é C porque DHT significa Distributed Hash Table, um sistema que distribui dados pela rede usando funções hash para facilitar a busca e recuperação.

P: Na DHT, o que representa a "chave"?
A) O endereço físico do servidor
B) O nome do usuário que compartilha os dados
C) O valor hash gerado a partir do conteúdo do dado
D) A quantidade de nós ativos na rede
R: C
E: A resposta correta é C porque a chave na DHT é obtida por meio de uma função hash aplicada ao dado ou ao seu identificador.

P: Qual operação em uma DHT permite inserir um dado com sua chave correspondente?
A) Find()
B) Put()
C) Save()
D) Join()
R: B
E: A resposta correta é B porque a função Put(chave, valor) é usada para armazenar um valor na tabela de hash distribuída usando a chave gerada por hash.

P: Qual operação em uma DHT permite recuperar um dado com base em sua chave?
A) Search()
B) Hash()
C) Get()
D) Ping()
R: C
E: A resposta correta é C porque a função Get(chave) permite buscar e recuperar o valor armazenado que está associado a essa chave específica.

P: Qual das opções abaixo é um algoritmo usado para rotear em DHTs?
A) HTTP
B) FTP
C) Chord
D) SSH
R: C
E: A resposta correta é C porque Chord é um dos algoritmos de roteamento utilizados em DHTs para localizar nós e dados de forma eficiente.

P: O que acontece na rede P2P quando mais clientes se conectam?
A) A carga do servidor aumenta exponencialmente
B) O desempenho da rede diminui drasticamente
C) A escalabilidade melhora, pois há mais colaboradores
D) O sistema entra em colapso por excesso de nós
R: C
E: A resposta correta é C porque em redes P2P, mais clientes significam mais colaboradores, o que aumenta a escalabilidade e distribui melhor a carga.

P: Qual tipo de nó assume um papel mais importante em algumas redes P2P, auxiliando na indexação e localização de dados?
A) Nó zumbi
B) Nó mestre
C) Super nó
D) Nó receptor
R: C
E: A resposta correta é C porque os super nós atuam como intermediários mais poderosos que os demais, ajudando na organização e busca de conteúdo.

P: Qual é a principal desvantagem da busca não estruturada em redes P2P?
A) Exige sempre um servidor central
B) Depende de uma topologia rígida
C) Pode ser ineficiente por envolver muita comunicação entre nós
D) Não permite compartilhamento de arquivos
R: C
E: A resposta correta é C porque, como os dados estão distribuídos aleatoriamente, a busca não estruturada pode gerar muitas mensagens e sobrecarregar a rede.

P: Em qual cenário a DHT é mais vantajosa em relação à busca tradicional em P2P?
A) Quando não há necessidade de localizar dados rapidamente
B) Quando os dados são confidenciais e precisam de criptografia
C) Quando é necessário localizar rapidamente dados específicos com eficiência
D) Quando os dados não são acessados com frequência
R: C
E: A resposta correta é C porque a DHT permite buscas rápidas e eficientes por dados com base em suas chaves hash, sem depender de broadcast ou flooding.

P: Qual dessas redes é um exemplo de sistema com busca não estruturada e puramente descentralizado?
A) BitTorrent com tracker
B) Napster
C) Skype original
D) Gnutella original
R: D
E: A resposta correta é D porque Gnutella original não possuía servidor auxiliar e distribuía os dados de forma aleatória entre os nós.

P: Como funciona a operação de rotear em uma rede com DHT?
A) Cria uma nova topologia de rede física
B) Transfere os dados diretamente ao cliente sem intermediários
C) Encaminha a mensagem até o nó correto responsável pela chave
D) Reconfigura o endereço IP do servidor
R: C
E: A resposta correta é C porque o roteamento em DHT serve para encaminhar comandos como GET e PUT até o nó responsável pela chave correspondente.

P: Qual papel o servidor auxiliar desempenha em algumas redes P2P?
A) Executar funções de roteamento e armazenamento completo dos dados
B) Substituir a rede P2P por completo
C) Facilitar a descoberta de nós e localização de conteúdo
D) Controlar centralmente todas as conexões entre os nós
R: C
E: A resposta correta é C porque o servidor auxiliar apenas facilita a busca inicial por conteúdo ou IPs, mas a comunicação posterior ocorre diretamente entre os nós.

P: Como os dados são distribuídos em uma busca estruturada com DHT?
A) Em nós aleatórios sem seguir padrão
B) Em servidores centrais específicos
C) Em locais determinados por uma função hash
D) Em clientes prioritários com maior conexão
R: C
E: A resposta correta é C porque, na DHT, os dados ou referências a dados são armazenados em nós baseados no resultado da função hash aplicada à chave.

P: O que representa o "valor" em uma tabela hash distribuída?
A) O endereço IP do roteador
B) O tempo de resposta da busca
C) O dado ou a referência ao dado buscado
D) A posição da tabela onde o dado está salvo
R: C
E: A resposta correta é C porque o valor armazenado em uma DHT corresponde ao dado associado à chave gerada pela função hash.

P: Qual vantagem a DHT oferece em relação à escalabilidade?
A) Garante menor uso de memória nos nós
B) Reduz o número de nós necessários na rede
C) Permite localizar dados em tempo constante ou logarítmico
D) Impede a entrada e saída dinâmica de nós
R: C
E: A resposta correta é C porque os algoritmos de DHT como Chord ou Kademlia permitem localizar dados de forma rápida, mesmo com muitos nós.

P: O que é uma Rede Sobreposta (Overlay) em sistemas P2P?
A) Uma rede física de cabeamento
B) Um sistema operacional que gerencia os nós
C) Uma rede lógica construída sobre a rede física existente
D) Um protocolo de segurança P2P
R: C
E: A resposta correta é C porque a rede sobreposta representa a conexão lógica entre os nós participantes da rede P2P, independente da infraestrutura física.

P: Qual é uma das maiores dificuldades de manter uma rede P2P?
A) Velocidade limitada pela nuvem
B) Baixo custo de operação
C) Entrada e saída constante de nós na rede
D) Licenciamento de software
R: C
E: A resposta correta é C porque o dinamismo dos nós – que entram e saem da rede com frequência – dificulta a consistência, localização de recursos e estabilidade.

P: Qual dessas redes representa um exemplo clássico do uso de super nós?
A) Bitcoin
B) Skype original
C) BitTorrent sem tracker
D) Napster
R: B
E: A resposta correta é B porque o Skype original utilizava super nós para auxiliar na roteação de chamadas e indexação de usuários.

P: Em que tipo de rede P2P os nós possuem responsabilidades totalmente equivalentes, sem servidor auxiliar ou super nós?
A) Com servidor auxiliar
B) P2P híbrido
C) Puramente descentralizado
D) Com nós mestres
R: C
E: A resposta correta é C porque em redes puramente descentralizadas todos os nós desempenham funções semelhantes sem coordenação central.

P: O que significa DHT no contexto de sistemas P2P?
A) Dados Híbridos Temporários
B) Distributed Hash Table
C) Digital Hardware Tracker
D) Direct Hash Transmission
R: B
E: A resposta correta é B porque DHT é a sigla para Distributed Hash Table, uma técnica de indexação distribuída em redes P2P estruturadas.

P: Qual algoritmo NÃO é um exemplo de implementação de DHT?
A) Chord
B) Kademlia
C) BitTorrent
D) Pastry
R: C
E: A resposta correta é C porque BitTorrent é um protocolo P2P, mas não é um algoritmo DHT; os outros (Chord, Kademlia e Pastry) são algoritmos DHT conhecidos.

P: Como funciona o mapeamento em uma DHT?
A) Conecta portas físicas diretamente
B) Usa uma IA para prever o local dos dados
C) Associa uma chave gerada por hash a um valor específico
D) Cria cópias aleatórias do mesmo dado em vários nós
R: C
E: A resposta correta é C porque o funcionamento da DHT envolve associar chaves geradas por funções hash aos valores armazenados, facilitando sua localização.

P: Qual é o papel de um tracker no BitTorrent com servidor auxiliar?
A) Armazenar todos os dados da rede
B) Proteger os arquivos com criptografia
C) Localizar pares (peers) e facilitar a conexão entre eles
D) Roteador de pacotes de rede
R: C
E: A resposta correta é C porque o tracker ajuda os usuários a encontrar outros peers que possuem partes do arquivo desejado, sem armazenar o conteúdo em si.

P: Qual é uma vantagem das redes P2P sobre o modelo cliente-servidor tradicional?
A) Redução de latência em todos os casos
B) Maior controle central sobre os dados
C) Maior tolerância a falhas e escalabilidade
D) Proibição de colaboração entre clientes
R: C
E: A resposta correta é C porque a arquitetura P2P é naturalmente escalável e resiliente, pois não depende de um ponto único de falha como o servidor.

P: Na estrutura de busca estruturada com DHT, o que a operação PUT faz?
A) Envia o dado diretamente ao usuário
B) Substitui a chave por uma nova
C) Armazena o dado na DHT associado à chave hash
D) Interrompe o roteamento da mensagem
R: C
E: A resposta correta é C porque a operação PUT na DHT serve para armazenar um valor (dado) sob uma chave específica, definida por uma função hash.

P: O que é uma rede sobreposta (overlay) em um sistema P2P?
A) É uma rede física de backup para garantir a conexão entre os nós
B) É um sistema paralelo usado para testar atualizações do software
C) É uma estrutura lógica construída sobre a rede física para conectar nós
D) É o nome dado ao firewall que protege a rede P2P
R: C
E: A resposta correta é C porque uma rede sobreposta (overlay) é uma estrutura lógica que conecta nós de forma virtual, independente da infraestrutura física, permitindo o roteamento e localização de dados entre pares no sistema P2P.

P: Qual é uma vantagem clara do modelo P2P em comparação ao modelo cliente-servidor?
A) Menor número de usuários simultâneos
B) Menor segurança na transmissão de dados
C) Eliminação de todos os servidores da rede
D) Maior escalabilidade com a entrada de novos usuários
R: D
E: A resposta correta é D porque o modelo P2P permite que, à medida que mais usuários entram na rede, também aumentam os recursos disponíveis, tornando-o mais escalável que o modelo cliente-servidor.

P: Qual dos itens a seguir representa um gargalo típico no modelo cliente-servidor?
A) A sobrecarga nos clientes ao gerenciar dados locais
B) A entrada de novos usuários aumentando a colaboração
C) O servidor central pode se tornar um ponto de falha
D) A descentralização da administração
R: C
E: A resposta correta é C porque no modelo cliente-servidor, o servidor central pode ficar sobrecarregado com requisições ou mesmo falhar, afetando toda a rede — o que é considerado um gargalo.

P: O que torna a DHT eficiente na localização de dados?
A) Criptografia automática dos dados na origem
B) Reutilização de endereços IP para economia de recursos
C) Uso de hash e roteamento para localizar dados de forma direta
D) Conexões fixas entre os nós da rede
R: C
E: A resposta correta é C porque DHT (Distributed Hash Table) usa funções hash para atribuir localizações específicas aos dados, e permite que os nós façam buscas diretas por chave, tornando a localização mais rápida e eficiente.

P: O que caracteriza um “super nó” em uma rede P2P?
A) Um nó que funciona como roteador da rede local
B) Um nó com acesso direto ao servidor de backup
C) Um nó com papel central na organização e indexação dos dados
D) Um nó que só se conecta em horários agendados
R: C
E: A resposta correta é C porque super nós assumem funções adicionais na rede, como indexação de conteúdos e intermediação entre outros nós, funcionando quase como "mini servidores" dentro da estrutura P2P.

P: Qual exemplo representa uma rede P2P com organização puramente descentralizada e sem servidor auxiliar?
A) Napster
B) Gnutella original
C) Skype original
D) BitTorrent com tracker
R: B
E: A resposta correta é B porque a Gnutella original era um exemplo clássico de rede P2P puramente descentralizada, sem servidor central para indexar os arquivos ou intermediar conexões.

P: Qual característica diferencia o modelo de super nós em redes P2P?
A) Todos os nós possuem as mesmas funções sem hierarquia
B) Os nós armazenam dados aleatoriamente
C) Alguns nós assumem responsabilidades extras, como indexação e conexão direta
D) Os dados estão sempre em servidores centralizados
R: C
E: A resposta correta é C porque o modelo com super nós envolve certos nós com papel mais relevante, auxiliando na organização, como ocorre em KaZaa ou Skype original.

P: No contexto de redes P2P, o BitTorrent pode operar de duas formas. Qual afirmação descreve corretamente essa dualidade?
A) Opera apenas com super nós
B) Utiliza servidores fixos para todas as conexões
C) Pode usar tracker (servidor auxiliar) ou funcionar sem ele (descentralizado)
D) É sempre uma rede estruturada com DHT
R: C
E: A resposta correta é C porque o BitTorrent pode funcionar com servidor tracker (ajudando na localização dos arquivos) ou de forma descentralizada com DHT, como no caso do magnet link.

P: Qual é o papel de uma DHT (Distributed Hash Table) em uma rede P2P estruturada?
A) Garantir a privacidade das conexões
B) Substituir a necessidade de conexão direta entre nós
C) Mapear dados a locais específicos com base em seus hashes
D) Controlar o tráfego de rede entre servidores centrais
R: C
E: A resposta correta é C porque a DHT é uma tabela hash distribuída que permite localizar dados rapidamente através de uma estrutura organizada com chaves baseadas em hash.

P: Qual das seguintes redes representa um modelo P2P com servidor auxiliar?
A) Gnutella original
B) Bitcoin
C) Napster
D) BitTorrent sem tracker
R: C
E: A resposta correta é C porque o Napster utilizava um servidor central para indexar os arquivos, mesmo que a transferência ocorresse diretamente entre os pares (clientes).

P: Qual é uma das principais aplicações da tecnologia P2P mencionada nas aulas?
A) Redes sociais
B) Streaming ao vivo
C) Compartilhamento de arquivos
D) Edição de documentos online
R: C
E: A resposta correta é C porque o compartilhamento de arquivos é uma das principais aplicações da tecnologia P2P, como exemplificado pelo uso do BitTorrent.

P: Qual porcentagem do tráfego de upload na Internet era atribuída ao BitTorrent em 2018, segundo a Sandvine?
A) 10%
B) 22%
C) 30%
D) 58%
R: B
E: A resposta correta é B porque, segundo dados da Sandvine de 2018, o BitTorrent representava 22% de todo o tráfego de upload da internet.

P: O tráfego de download da internet é, majoritariamente, composto por que tipo de conteúdo?
A) Jogos online
B) Vídeos
C) Imagens
D) Documentos acadêmicos
R: B
E: A resposta correta é B porque 58% do tráfego de download da Internet é composto por vídeos, segundo os dados citados na aula.

P: Qual empresa sozinha era responsável por 15% do tráfego de download, de acordo com os dados de 2018?
A) YouTube
B) Amazon Prime
C) Netflix
D) Hulu
R: C
E: A resposta correta é C porque a aula menciona que, segundo a Sandvine, a Netflix sozinha era responsável por 15% do tráfego de download na internet.

P: O que é compartilhado em um arquivo .torrent?
A) O conteúdo do arquivo completo
B) O histórico de downloads de um usuário
C) Um link contendo metadados sobre o arquivo
D) Vídeos criptografados
R: C
E: A resposta correta é C porque o arquivo .torrent contém metadados que referenciam o conteúdo, como divisão de pedaços, verificação de integridade e localização.

P: Qual é uma função importante dos arquivos .torrent para a segurança?
A) Protegem o endereço IP do usuário
B) Garantem a exclusividade do download
C) Verificam a integridade do conteúdo
D) Criam senhas de acesso
R: C
E: A resposta correta é C porque os arquivos .torrent permitem verificar a integridade do conteúdo, impedindo a inserção de malware em torrents legítimos.

P: Como ocorre a busca por arquivos no protocolo BitTorrent?
A) Através de servidores centralizados
B) Via buscadores como Google
C) Integrada no próprio protocolo
D) Fora do protocolo, por sites ou interfaces dos apps
R: D
E: A resposta correta é D porque o protocolo BitTorrent não inclui um sistema de busca interno; essa função é realizada por sites ou interfaces de aplicativos como o qBittorrent.

P: Qual das opções a seguir é um exemplo de software que utiliza o protocolo BitTorrent?
A) Mozilla Firefox
B) Zoom
C) qBittorrent
D) Outlook
R: C
E: A resposta correta é C porque o qBittorrent é um dos vários aplicativos que utilizam o protocolo BitTorrent para compartilhamento de arquivos.

P: Como o BitTorrent decide quais pedaços de arquivos um nó deve solicitar primeiro?
A) Ordem alfabética
B) Ordem de criação do arquivo
C) Pedaços mais raros primeiro
D) Tamanho menor primeiro
R: C
E: A resposta correta é C porque o protocolo BitTorrent prioriza os pedaços mais raros entre os disponíveis, uma técnica conhecida como "rarest first".

P: Qual é o nome da estratégia usada para incentivar a cooperação entre usuários no envio de pedaços?
A) Broadcast loop
B) Eye-to-eye
C) Tit-for-tat
D) Divide-and-send
R: C
E: A resposta correta é C porque a estratégia tit-for-tat (ou "olho por olho") favorece o envio de pedaços para os nós que também cooperam, aumentando a eficiência e justiça da rede.

P: Qual o principal critério para um nó enviar pedaços a outros usuários na rede BitTorrent?
A) Velocidade da conexão da operadora
B) Ordem de chegada dos pedidos
C) Prioridade para nós que enviam dados mais rápido
D) Localização geográfica dos nós
R: C
E: A resposta correta é C porque o BitTorrent usa o critério "tit-for-tat", priorizando os nós que também enviam dados com maior velocidade.

P: O que é o “optimistic unchoke” no protocolo BitTorrent?
A) Uma técnica de compressão de arquivos
B) Substituição aleatória de pedaços repetidos
C) Escolha periódica de um novo nó para testar troca de dados
D) Modo de criptografar os arquivos .torrent
R: C
E: A resposta correta é C porque o "optimistic unchoke" é a substituição periódica do nó com menor desempenho por outro, testando se ele oferece melhor troca de dados.

P: Qual a vantagem da estratégia "mais raros primeiro" usada no BitTorrent?
A) Reduz o tamanho final do arquivo
B) Impede usuários de baixarem todo o conteúdo
C) Garante que os pedaços menos disponíveis circulem mais
D) Aumenta a velocidade de upload
R: C
E: A resposta correta é C porque ao priorizar os pedaços mais raros, o protocolo garante que esses dados não se percam quando poucos nós os possuem, aumentando a disponibilidade do arquivo.

P: O que são "seeders" no contexto do BitTorrent?
A) Usuários que ainda não começaram o download
B) Servidores centralizados que armazenam os arquivos
C) Nós que possuem o arquivo completo e continuam compartilhando
D) Aplicativos que se conectam à rede BitTorrent
R: C
E: A resposta correta é C porque "seeders" são os nós que já possuem o arquivo completo e continuam enviando os pedaços aos demais usuários, colaborando com a rede.

P: O que pode acontecer ao se conectar a muitos nós ao mesmo tempo no BitTorrent?
A) Aumenta drasticamente a velocidade de download
B) Reduz a eficiência devido à divisão da banda
C) Interrompe o download automaticamente
D) Apaga pedaços duplicados do arquivo
R: B
E: A resposta correta é B porque conectar-se a muitos nós divide a banda disponível, podendo diminuir a eficiência do download, mesmo parecendo uma boa estratégia.

P: Para que serve o tracker no BitTorrent?
A) Controlar a ordem dos pedaços
B) Fazer a verificação de segurança dos arquivos
C) Encontrar outros peers com o mesmo arquivo
D) Armazenar os arquivos originais
R: C
E: A resposta correta é C porque o tracker ajuda um cliente BitTorrent a localizar outros peers (nós) que compartilham o mesmo conteúdo.

P: Qual é o papel do DHT (Distributed Hash Table) no BitTorrent?
A) Substituir o protocolo de download
B) Criar hashes para criptografar arquivos
C) Distribuir os pedaços de forma sequencial
D) Atuar como substituto do tracker
R: D
E: A resposta correta é D porque o DHT é uma tabela hash distribuída que permite aos nós atuarem como um tracker descentralizado, útil especialmente quando o tracker original não está disponível.

P: O que são links magnéticos (magnet links) no BitTorrent?
A) URLs para sites de torrent anônimos
B) Links que apontam para o conteúdo usando DHT, sem precisar do arquivo .torrent
C) Atalhos para acelerar downloads em navegadores
D) Extensões que protegem contra malware
R: B
E: A resposta correta é B porque os links magnéticos utilizam o DHT para localizar os peers e iniciar o download sem precisar do arquivo .torrent.

P: O Peer Exchange (PEX) tem qual função no BitTorrent?
A) Acelerar o upload dos pedaços
B) Sincronizar arquivos entre dispositivos
C) Permitir que nós troquem informações sobre outros usuários
D) Compactar arquivos para download mais rápido
R: C
E: A resposta correta é C porque o PEX permite que os nós troquem listas de peers (usuários), aumentando a disponibilidade e descoberta de outros participantes da rede.

P: Em relação ao anonimato, qual é a limitação do BitTorrent?
A) Criptografa todo o conteúdo por padrão
B) Os IPs dos nós são visíveis entre si
C) O conteúdo não pode ser monitorado por terceiros
D) O uso é restrito apenas a redes privadas
R: B
E: A resposta correta é B porque, no BitTorrent, os nós visualizam os IPs uns dos outros, o que permite o monitoramento da atividade na rede.

P: Qual das alternativas abaixo representa uma vantagem do uso de DHT no BitTorrent?
A) Reduz o tempo de download dos arquivos grandes
B) Garante a verificação de malware em tempo real
C) Substitui o tracker, permitindo descentralização
D) Impede que IPs sejam visualizados na rede
R: C
E: A resposta correta é C porque o DHT permite que os próprios nós atuem como um tracker descentralizado, aumentando a disponibilidade e resistência da rede.

P: O que torna o BitTorrent resistente à censura e a ataques de negação de serviço?
A) Uso obrigatório de criptografia em todos os dados
B) A existência de super servidores com proteção dedicada
C) Mecanismos como DHT, PEX e magnet links
D) Compressão dos arquivos em pacotes protegidos
R: C
E: A resposta correta é C porque o uso de mecanismos como DHT (para buscar peers), PEX (para trocar listas de nós) e magnet links (para iniciar downloads sem arquivos .torrent) tornam a rede mais resiliente a falhas e censura.

P: Qual recurso do BitTorrent permite que um usuário comece o download mesmo sem um arquivo .torrent?
A) UDP Tracking
B) Magnet Link
C) Tit-for-Tat
D) Checksum Verification
R: B
E: A resposta correta é B porque os magnet links contêm informações suficientes (como o hash do conteúdo) para iniciar o processo de download usando DHT, mesmo sem o arquivo .torrent.

P: O que o BitTorrent utiliza para prevenir a inserção de arquivos maliciosos em torrents legítimos?
A) Monitoramento constante via firewall
B) Análise de reputação dos peers
C) Verificação de integridade por hash
D) Criptografia ponta a ponta
R: C
E: A resposta correta é C porque o protocolo utiliza hash para garantir que os pedaços recebidos correspondem ao arquivo original, evitando alterações maliciosas.

P: O que acontece quando um peer envia pedaços falsos na rede BitTorrent?
A) O conteúdo corrompe todo o arquivo baixado
B) O nó é automaticamente banido da rede
C) O pedaço é descartado na verificação
D) O download é reiniciado desde o começo
R: C
E: A resposta correta é C porque cada pedaço recebido passa por verificação de integridade, e caso esteja incorreto (como no envio de pedaços falsos), ele é simplesmente descartado.

P: Qual técnica usada no BitTorrent encoraja os usuários a compartilharem dados?
A) Criptografia assimétrica
B) Compressão automática dos pedaços
C) Tit-for-tat (olho por olho)
D) Alocação sequencial dos arquivos
R: C
E: A resposta correta é C porque o sistema “tit-for-tat” prioriza o envio de dados para os peers que também compartilham, estimulando a cooperação e evitando usuários passivos.

P: Qual aplicativo NÃO é um cliente de BitTorrent?
A) qBittorrent
B) Deluge
C) uTorrent
D) Spotify
R: D
E: A resposta correta é D porque Spotify é um serviço de streaming que utiliza modelo cliente-servidor e não opera com compartilhamento P2P como os demais aplicativos listados.

P: Por que a busca de arquivos não está incluída no protocolo BitTorrent?
A) Porque é ilegal em todos os países
B) Para garantir velocidade de download
C) Para manter o protocolo simples e modular
D) Para evitar conflitos com sistemas operacionais
R: C
E: A resposta correta é C porque a busca por arquivos é feita por sites ou interfaces externas, mantendo o protocolo BitTorrent voltado apenas para o compartilhamento de arquivos, de forma modular e eficiente.

P: Qual percentual do tráfego de upload da Internet era atribuído ao BitTorrent em 2018, segundo a Sandvine?
A) 8%
B) 15%
C) 22%
D) 58%
R: C
E: A resposta correta é C porque, segundo dados de 2018 da empresa Sandvine, o BitTorrent era responsável por 22% de todo o tráfego de upload da Internet.

P: Por que o uso do BitTorrent pode comprometer o anonimato dos usuários?
A) Os arquivos baixados são públicos
B) A rede registra os dados bancários dos usuários
C) Os IPs dos peers são visíveis durante o compartilhamento
D) O protocolo exige login em servidor centralizado
R: C
E: A resposta correta é C porque os usuários da rede enxergam os IPs uns dos outros, o que pode permitir o rastreamento de suas atividades, comprometendo o anonimato.

P: Qual é uma das funções da extensão .torrent no protocolo BitTorrent?
A) Criptografar os dados para segurança.
B) Servir como link fixo que identifica o conteúdo e verifica sua integridade.
C) Garantir anonimato completo aos usuários.
D) Gerar uma senha para download automático.
R: B
E: A resposta correta é B porque o arquivo .torrent funciona como um identificador fixo do conteúdo e permite a verificação de integridade, prevenindo alterações ou inserção de malware.

P: Qual mecanismo BitTorrent usa para decidir quais pedaços de arquivos baixar primeiro?
A) Os maiores primeiro
B) Os que demoram mais para baixar
C) Os mais raros primeiro
D) Os mais populares primeiro
R: C
E: A resposta correta é C porque o BitTorrent prioriza pedaços menos disponíveis na rede, ajudando na distribuição mais eficiente e garantindo a permanência do conteúdo.

P: O que é o mecanismo “tit-for-tat” no BitTorrent?
A) Um método de bloqueio de peers maliciosos.
B) Uma forma de criptografar pacotes de dados.
C) Um sistema onde um peer só envia dados para quem também compartilha com ele.
D) Um tipo de compressão de arquivos grandes.
R: C
E: A resposta correta é C porque “tit-for-tat” incentiva a cooperação entre nós: cada usuário tende a enviar dados para aqueles que mais compartilham com ele.

P: O que é o “optimistic unchoke” no BitTorrent?
A) Um sistema de segurança contra malwares.
B) Uma forma de excluir peers lentos.
C) Um método de tentar trocar dados com um peer novo ou não testado.
D) Um protocolo de anonimato embutido.
R: C
E: A resposta correta é C porque o “optimistic unchoke” tenta se conectar com peers novos para testar se há alguma oportunidade de transferência mais rápida, mesmo que eles não tenham sido os mais eficientes anteriormente.

P: Qual das alternativas representa corretamente o papel dos seeders em uma rede BitTorrent?
A) Usuários que consomem o arquivo e saem da rede.
B) Usuários que nunca compartilham dados com os outros.
C) Usuários que já possuem o arquivo completo e continuam compartilhando.
D) Usuários que apenas monitoram a rede.
R: C
E: A resposta correta é C porque seeders são nós que têm o arquivo completo e continuam distribuindo-o, contribuindo para a disponibilidade do conteúdo.

P: Qual é a consequência de um usuário se conectar a muitos peers no BitTorrent?
A) Aumenta automaticamente sua taxa de download.
B) Pode reduzir a eficiência da conexão por dividir a banda.
C) Garante mais segurança nas trocas.
D) Diminui as chances de encontrar pedaços raros.
R: B
E: A resposta correta é B porque conectar-se a muitos peers divide a banda entre eles, o que pode reduzir a eficiência das transferências em vez de aumentá-la.

P: Qual dessas opções representa uma vantagem do BitTorrent sem tracker?
A) Menor velocidade de download.
B) Maior vulnerabilidade a censura.
C) Maior resiliência contra falhas e censura.
D) Dependência de um servidor central.
R: C
E: A resposta correta é C porque, sem tracker, o sistema utiliza mecanismos como DHT e PEX, que permitem mais autonomia entre os peers e dificultam o bloqueio do conteúdo.

P: O que é o Peer Exchange (PEX) no BitTorrent?
A) Uma técnica de criptografia entre peers.
B) Um modo de alterar endereços IP durante o download.
C) Um mecanismo onde peers trocam listas de outros peers.
D) Um algoritmo para bloquear peers maliciosos.
R: C
E: A resposta correta é C porque PEX permite que peers compartilhem informações sobre outros usuários conectados, facilitando a formação da rede de distribuição.

P: Por que o uso de magnet links é vantajoso no BitTorrent?
A) Porque oculta completamente o IP do usuário.
B) Porque é usado apenas para arquivos pequenos.
C) Porque dispensa o uso de arquivos .torrent, usando DHT para localizar os dados.
D) Porque realiza o download mais rápido.
R: C
E: A resposta correta é C porque magnet links usam DHT para localizar os peers e os dados sem precisar baixar o .torrent, aumentando a praticidade e resistência a falhas.

P: O BitTorrent garante o anonimato dos usuários na rede?
A) Sim, todos os dados são criptografados e não rastreáveis.
B) Não, os IPs são visíveis entre peers durante a troca de pedaços.
C) Sim, graças ao uso de magnet links.
D) Não, mas impede rastreamento por operadores de Internet.
R: B
E: A resposta correta é B porque, por padrão, o BitTorrent não oferece anonimato: os peers veem os IPs uns dos outros, o que permite rastreamento por terceiros.

P: Qual é uma das formas de se proteger contra a inserção de malware em arquivos .torrent?
A) Utilizar criptografia AES nativa.
B) Baixar apenas arquivos com menos de 100MB.
C) Verificar a integridade do arquivo pelo hash incluído no .torrent.
D) Usar redes VPN em todas as conexões.
R: C
E: A resposta correta é C porque o .torrent contém hashes que permitem verificar a integridade do arquivo, garantindo que ele corresponde ao conteúdo original, impedindo alterações maliciosas.

P: Qual é a função de um tracker no protocolo BitTorrent?
A) Criptografar os dados transferidos.
B) Armazenar o conteúdo dos arquivos.
C) Coordenar a troca de pedaços entre peers.
D) Ajudar os peers a se encontrarem inicialmente.
R: D
E: A resposta correta é D porque o tracker serve para conectar os peers entre si no início da transferência, mas não armazena o conteúdo nem intermedia diretamente a troca dos pedaços.

P: O que acontece se o tracker sair do ar em uma rede BitTorrent com DHT ativado?
A) Toda a transferência falha.
B) A rede continua funcionando usando DHT para localização de peers.
C) Os arquivos são criptografados automaticamente.
D) A rede reinicia todas as conexões.
R: B
E: A resposta correta é B porque com DHT (Distributed Hash Table), os peers conseguem se localizar diretamente sem depender de um tracker central, garantindo a continuidade da transferência.

P: Qual é um benefício do uso de “mais raros primeiro” como estratégia de download?
A) Evita que o arquivo seja muito baixado.
B) Garante que os peers fiquem online por mais tempo.
C) Aumenta a velocidade da transferência em conexões lentas.
D) Mantém a disponibilidade dos pedaços menos comuns, dificultando sua perda.
R: D
E: A resposta correta é D porque essa estratégia ajuda a garantir que os pedaços mais escassos sejam distribuídos rapidamente, evitando gargalos na rede e garantindo que todos possam completá-los.

P: Por que o BitTorrent é considerado eficiente em termos de escalabilidade?
A) Porque depende de servidores centralizados.
B) Porque não requer internet de alta velocidade.
C) Porque quanto mais usuários, mais distribuição de dados ocorre.
D) Porque divide os dados apenas entre os peers mais antigos.
R: C
E: A resposta correta é C porque a arquitetura P2P do BitTorrent permite que cada novo usuário se torne também um distribuidor (uploader), aumentando a capacidade de transferência da rede.

P: O que significa dizer que o BitTorrent cria uma “rede overlay” para cada arquivo?
A) Cada peer conecta-se a todos os outros globalmente.
B) Uma rede lógica é formada com conexões específicas para aquele arquivo.
C) A rede depende exclusivamente de servidores fixos.
D) Um backup automático é criado em nuvem.
R: B
E: A resposta correta é B porque cada arquivo compartilhado via BitTorrent gera uma rede específica com peers que possuem ou desejam aquele conteúdo, formando uma sobreposição à rede física.

P: Qual ferramenta ajuda a iniciar downloads sem depender de um arquivo .torrent físico?
A) IPsec
B) Magnet Link
C) VPN
D) Seedbox
R: B
E: A resposta correta é B porque os magnet links contêm informações suficientes (como hashes) para localizar e iniciar a transferência de arquivos via DHT, sem precisar de um .torrent separado.

P: Qual é um dos perigos em relação à privacidade ao usar o BitTorrent sem proteção adicional?
A) Vazamento de senhas armazenadas no navegador.
B) Riscos de infecção por vírus no cache.
C) Exposição do endereço IP a qualquer peer conectado.
D) Bloqueio automático de arquivos criptografados.
R: C
E: A resposta correta é C porque o protocolo BitTorrent, por padrão, não esconde o IP dos usuários, e qualquer peer na rede pode visualizar os IPs dos outros conectados ao mesmo torrent.

P: Por que o BitTorrent ainda é amplamente usado, mesmo com o aumento de plataformas de streaming?
A) Porque é o único método de distribuição de vídeos.
B) Porque os arquivos são obrigatoriamente gratuitos.
C) Porque sua arquitetura é resiliente, eficiente e permite compartilhar qualquer tipo de arquivo.
D) Porque só funciona em redes locais, garantindo segurança.
R: C
E: A resposta correta é C porque o BitTorrent continua útil para distribuição de arquivos de qualquer tipo (não apenas mídia), com grande eficiência, escalabilidade e sem depender de um servidor central.

P: Em qual cenário o BitTorrent com Peer Exchange (PEX) e DHT é mais vantajoso?
A) Quando se precisa de altíssima velocidade de download.
B) Quando se busca anonimato completo.
C) Quando se deseja resistência à censura ou queda de trackers.
D) Quando se compartilham arquivos criptografados.
R: C
E: A resposta correta é C porque os mecanismos de PEX e DHT permitem que os peers descubram uns aos outros mesmo sem um servidor central (tracker), o que é útil em contextos com censura ou interrupções.

P: O que é o "tit-for-tat" (olho por olho) no BitTorrent?
A) Um algoritmo de encriptação de arquivos.
B) Um mecanismo para evitar IPs duplicados.
C) Uma estratégia que prioriza peers que também enviam dados.
D) Um método de identificar peers com conteúdo corrompido.
R: C
E: A resposta correta é C porque o "tit-for-tat" incentiva a cooperação entre os usuários: quem contribui com upload é priorizado para receber dados, otimizando a eficiência da rede.

P: Qual o papel do “optimistic unchoke” no BitTorrent?
A) Escolher o peer mais rápido da rede.
B) Garantir que o peer principal nunca seja desconectado.
C) Substituir periodicamente um peer por outro, testando novas conexões.
D) Criptografar pacotes de dados temporariamente.
R: C
E: A resposta correta é C porque o “optimistic unchoke” permite testar novas conexões com outros peers, substituindo temporariamente os menos eficientes, o que melhora a redistribuição dos dados.

P: Qual é uma desvantagem de se conectar a muitos peers simultaneamente no BitTorrent?
A) Aumenta a chance de malware.
B) Diminui a velocidade total da conexão, pois divide a banda.
C) Gera conflito de IP com outros peers.
D) Impede a verificação de integridade dos dados.
R: B
E: A resposta correta é B porque, apesar de parecer vantajoso, conectar-se a muitos peers pode reduzir a eficiência, pois a largura de banda é compartilhada entre todas as conexões ativas.

P: Qual é o impacto da estratégia "mais raros primeiro" na rede BitTorrent?
A) Reduz o tráfego entre peers.
B) Aumenta o anonimato das conexões.
C) Garante maior disponibilidade dos dados.
D) Diminui o tempo total de download.
R: C
E: A resposta correta é C porque a estratégia "mais raros primeiro" garante que os pedaços menos distribuídos sejam compartilhados primeiro, prevenindo sua perda e mantendo o arquivo disponível na rede.

P: Em qual aspecto o BitTorrent se diferencia de outros modelos de P2P?
A) Não utiliza criptografia em nenhum nível.
B) Cada arquivo possui uma rede de peers própria.
C) Requer autenticação via e-mail.
D) Só funciona com arquivos abaixo de 1GB.
R: B
E: A resposta correta é B porque o BitTorrent cria uma rede específica para cada arquivo compartilhado, o que o torna altamente eficiente na distribuição de dados específicos.

P: Como o BitTorrent contribui para a descentralização da distribuição de arquivos?
A) Centralizando os arquivos em um servidor principal.
B) Compartilhando os arquivos apenas com supernós.
C) Permitindo que cada usuário atue como servidor e cliente ao mesmo tempo.
D) Utilizando redes locais ao invés da internet.
R: C
E: A resposta correta é C porque todos os peers no BitTorrent podem enviar e receber dados, eliminando a necessidade de um servidor central e promovendo a descentralização.

P: O que representa um “seeder” em uma rede BitTorrent?
A) Um usuário que ainda não baixou nada.
B) Um usuário que compartilha arquivos sem receber nada em troca.
C) Um nó que impede o funcionamento do tracker.
D) Um peer que tenta burlar o protocolo.
R: B
E: A resposta correta é B porque o seeder é o usuário que já completou o download do arquivo e permanece compartilhando com outros, contribuindo para a manutenção da rede.

P: Por que magnet links são considerados mais resistentes a falhas?
A) Porque não exigem conexão com a internet.
B) Porque não possuem endereço IP.
C) Porque eliminam a necessidade do arquivo .torrent, usando DHT diretamente.
D) Porque criptografam automaticamente os arquivos.
R: C
E: A resposta correta é C porque magnet links funcionam com DHT e permitem iniciar a busca por peers diretamente, sem depender de arquivos .torrent que poderiam ser apagados ou bloqueados.

P: O que é Peer Exchange (PEX) no BitTorrent?
A) Um site de indexação de torrents.
B) Um protocolo para acelerar downloads com redes locais.
C) Um sistema onde peers trocam informações sobre outros peers.
D) Um mecanismo para codificar pedaços de arquivos.
R: C
E: A resposta correta é C porque o PEX permite que os peers compartilhem listas de outros usuários conectados, facilitando a descoberta de novas conexões sem depender de trackers.

P: O que é possível monitorar na rede BitTorrent mesmo sem anonimato?
A) O conteúdo dos arquivos criptografados.
B) A localização geográfica exata de cada usuário.
C) O endereço IP dos peers conectados a um determinado conteúdo.
D) As credenciais bancárias dos usuários.
R: C
E: A resposta correta é C porque os IPs são visíveis durante a troca de pedaços de arquivo, e qualquer peer pode monitorar outros participantes da mesma rede de torrent.

P: O que é o Onion Routing?
A) Uma técnica de compressão de dados da internet
B) Um protocolo de streaming utilizado por serviços de vídeo
C) Um método de roteamento que utiliza múltiplas camadas de criptografia para anonimato
D) Um sistema para gerenciar servidores proxy em redes privadas
R: C
E: A resposta correta é C porque o Onion Routing é um método de roteamento que utiliza vários nós intermediários (roteadores) para cifrar os dados em camadas. Cada nó remove uma camada até que a mensagem chegue ao destino, garantindo que nenhum nó saiba origem e destino completos.

P: Qual o principal objetivo do uso de Tor?
A) Proteger senhas em e-mails corporativos
B) Facilitar o download de arquivos grandes
C) Navegar de forma anônima na internet
D) Aumentar a velocidade de conexão com servidores internacionais
R: C
E: A resposta correta é C porque o Tor (The Onion Router) é uma rede criada especificamente para permitir que os usuários naveguem na internet de forma anônima, escondendo seus IPs e localização por meio do Onion Routing.

P: No Onion Routing, o cliente cria um circuito com quantos roteadores (nós) por padrão?
A) 1
B) 2
C) 3
D) 5
R: C
E: A resposta correta é C porque, no modelo típico do Tor, são utilizados três roteadores: o de entrada, o intermediário e o de saída. Isso garante um nível de anonimato onde nenhum dos nós tem conhecimento total da origem e destino dos dados.

P: Qual é a função do Onion Router de saída (último nó) no circuito do Tor?
A) Identificar o endereço IP do cliente
B) Conectar-se diretamente ao destino final da navegação
C) Criptografar os dados com uma chave pública
D) Interceptar e armazenar todas as informações do usuário
R: B
E: A resposta correta é B porque o nó de saída é o único que se comunica diretamente com o destino final na internet. Os dados que chegam até ele já foram decifrados e ele apenas entrega esses dados, sem saber quem os originou.

P: O que são os serviços escondidos no Tor (endereços .onion)?
A) Sites que utilizam múltiplas autenticações
B) Servidores que estão offline, mas registrados no diretório do Tor
C) Servidores cujo endereço IP é ocultado usando o próprio Tor
D) Sites indexados por buscadores tradicionais como Google
R: C
E: A resposta correta é C porque os serviços escondidos (ou hidden services) do Tor permitem que um servidor ofereça conteúdo sem revelar seu endereço IP, utilizando endereços .onion que só podem ser acessados pela rede Tor.

P: Qual o papel dos “pontos de apresentação” nos serviços escondidos do Tor?
A) Aumentar a velocidade de conexão entre cliente e servidor
B) Armazenar dados temporários para facilitar buscas na Deep Web
C) Atuar como intermediários que permitem a conexão entre cliente e servidor sem que seus IPs reais sejam expostos
D) Fornecer proteção contra vírus ao acessar sites .onion
R: C
E: A resposta correta é C porque os pontos de apresentação são nós intermediários escolhidos pelo servidor oculto para permitir que clientes se conectem a ele anonimamente. Eles garantem que o servidor permaneça oculto.

P: Como um cliente encontra o caminho até um serviço escondido no Tor?
A) Por meio de DNS públicos como na web tradicional
B) Solicitando diretamente ao servidor seu IP real
C) Através de um diretório onde estão armazenadas informações sobre os pontos de apresentação
D) Digitando o endereço IP da Deep Web manualmente
R: C
E: A resposta correta é C porque os serviços escondidos registram descritores com informações sobre os pontos de apresentação em diretórios da rede Tor. O cliente consulta esse diretório para iniciar a conexão de forma anônima.

P: Qual é uma das principais finalidades da existência dos serviços escondidos na rede Tor?
A) Compartilhar arquivos grandes com mais velocidade
B) Proteger a privacidade de servidores contra ataques e rastreamento
C) Armazenar logs de navegação dos usuários
D) Reduzir o uso de largura de banda em redes corporativas
R: B
E: A resposta correta é B porque os serviços escondidos permitem que servidores ocultem seu IP e localização, oferecendo proteção contra censura, ataques físicos ou ataques de negação de serviço.

P: Qual característica da Deep Web a diferencia da Surface Web (web da superfície)?
A) É mais rápida e segura para navegação comum
B) É completamente indexada por buscadores tradicionais
C) Contém conteúdo não indexado por mecanismos de busca
D) É usada apenas por criminosos
R: C
E: A resposta correta é C porque a Deep Web inclui todo conteúdo que não é indexado por buscadores comuns, como páginas protegidas por login, bancos de dados privados, e sistemas como o Tor.

P: Qual dos seguintes exemplos não pertence à Deep Web?
A) Página de e-mail acessada por login pessoal
B) Fórum oculto acessível apenas por Tor
C) Página de pesquisa no Google.com
D) Banco de dados acadêmico com acesso restrito
R: C
E: A resposta correta é C porque o Google.com e seus resultados fazem parte da Surface Web (web da superfície), sendo completamente indexados por buscadores e de livre acesso.

P: O que é o Tor Browser?
A) Um antivírus usado para proteger a navegação por sites comuns
B) Um navegador especializado em acesso a serviços escondidos da rede Tor
C) Um plugin para acelerar downloads em redes P2P
D) Um sistema operacional para celulares criptografados
R: B
E: A resposta correta é B porque o Tor Browser é um navegador baseado no Firefox, adaptado para navegar pela rede Tor e acessar sites .onion, garantindo anonimato e segurança.

P: O que é a técnica de Onion Routing?
A) Uma forma de compartilhar arquivos grandes via torrents
B) Um modelo de criptografia baseado em bloqueios de IP
C) Uma técnica em que os dados passam por múltiplos nós com camadas de criptografia
D) Um sistema de roteamento que usa apenas um servidor central
R: C
E: A resposta correta é C porque no Onion Routing os dados são criptografados em camadas e enviados através de múltiplos roteadores (nós), onde cada um decifra apenas sua camada, protegendo origem, destino e conteúdo.

P: O que ocorre quando o cliente Tor acessa o destino final?
A) O destino vê o IP real do cliente
B) O destino vê apenas o Onion Router final do circuito
C) O destino vê todos os roteadores intermediários
D) O destino bloqueia o acesso automaticamente
R: B
E: A resposta correta é B porque, ao final do circuito Tor, o destino só consegue ver o IP do último roteador (Onion Router #3), mantendo o IP do cliente oculto.

P: O que são "serviços escondidos" na rede Tor?
A) Sites que só funcionam com login administrativo
B) Aplicações que operam fora da internet tradicional e podem ser acessadas por endereços .onion
C) Serviços de internet que bloqueiam rastreamento de cookies
D) Páginas privadas da Surface Web acessadas por senha
R: B
E: A resposta correta é B porque os serviços escondidos são sites ou aplicações que operam dentro da rede Tor e só são acessíveis por endereços terminados em .onion, com proteção de IP e localização.

P: Qual das opções não é um motivo legítimo para alguém desejar anonimato na internet?
A) Denunciar abusos anonimamente
B) Participar de protestos contra regimes autoritários
C) Evitar censura e perseguição
D) Fazer ataques de negação de serviço (DDoS)
R: D
E: A resposta correta é D porque ataques DDoS são ilegais e maliciosos. Já os outros exemplos envolvem usos legítimos da privacidade e anonimato.

P: Por que o Tor é considerado mais resistente à censura do que métodos tradicionais?
A) Porque exige login com verificação em duas etapas
B) Porque seus dados são criptografados por VPNs
C) Porque utiliza uma rede descentralizada e com múltiplos nós
D) Porque bloqueia qualquer tipo de conteúdo ilegal
R: C
E: A resposta correta é C porque a estrutura descentralizada do Tor e o uso de Onion Routing tornam mais difícil para censores bloquearem ou rastrearem usuários, aumentando a resistência contra restrições governamentais.

P: O que é um “ponto de encontro” na comunicação entre cliente e servidor oculto no Tor?
A) Um diretório público que armazena endereços .onion
B) Um roteador que intermedia o tráfego de toda a rede
C) Um nó intermediário que conecta o circuito do cliente ao circuito do servidor
D) O servidor final da Surface Web
R: C
E: A resposta correta é C porque o ponto de encontro é o nó da rede Tor que liga os caminhos (circuitos) criados separadamente pelo cliente e pelo servidor oculto, mantendo o anonimato de ambos.

P: Qual a função dos servidores de diretório (directory servers) na rede Tor?
A) Bloquear IPs maliciosos
B) Armazenar os dados de navegação dos usuários
C) Fornecer uma lista atualizada de nós Tor para os clientes estabelecerem circuitos
D) Criptografar as mensagens enviadas na rede Tor
R: C
E: A resposta correta é C porque os servidores de diretório mantêm uma lista confiável e atualizada dos nós disponíveis da rede Tor, permitindo que o cliente construa o caminho seguro por meio desses nós.

P: Qual das alternativas representa uma vantagem dos serviços escondidos (hidden services) na rede Tor?
A) Permitem que servidores tenham IPs públicos fixos
B) Garantem maior velocidade de navegação
C) Protegem a identidade e localização dos servidores .onion
D) Tornam a navegação rastreável para evitar abusos
R: C
E: A resposta correta é C porque os serviços escondidos protegem os IPs e a geolocalização dos servidores, garantindo que nem clientes nem atacantes descubram a origem real dos serviços hospedados.

P: Qual das alternativas descreve corretamente o funcionamento da “cebola” no Onion Routing?
A) Uma rede de proxies simples com criptografia básica
B) Uma estrutura de camadas onde cada camada representa um nível de segurança removido por um nó intermediário
C) Um sistema de bloqueio automático por país
D) Um tipo de antivírus utilizado na Deep Web
R: B
E: A resposta correta é B porque o Onion Routing aplica camadas de criptografia sucessivas (como uma cebola) que são descriptografadas por cada nó do circuito, protegendo a identidade e os dados.

P: O que é a Deep Web, segundo os slides analisados?
A) Parte da internet usada apenas por hackers
B) Parte da web que contém apenas conteúdo ilegal
C) Conteúdo da web não indexado por buscadores tradicionais
D) Toda a web acessada com navegadores como Tor
R: C
E: A resposta correta é C porque a Deep Web compreende qualquer conteúdo não acessível por motores de busca comuns, como páginas dinâmicas, protegidas por login ou sem links públicos.

P: O que são Web Crawlers ou Spiders?
A) Programas que criptografam arquivos confidenciais
B) Sistemas que coletam dados de redes sociais
C) Bots que rastreiam e indexam páginas da web para buscadores
D) Códigos maliciosos utilizados em ataques de phishing
R: C
E: A resposta correta é C porque Web Crawlers (ou Spiders) são programas automáticos que visitam sites, coletam conteúdo e constroem a base de dados dos motores de busca.

P: Qual é o papel do “desafogamento otimista” (optimistic unchoke) em redes P2P como BitTorrent (aplicação mencionada em contexto semelhante ao anonimato)?
A) Aumentar a compressão de dados
B) Desconectar peers lentos automaticamente
C) Substituir periodicamente o peer com menor taxa de upload por outro para incentivar a cooperação
D) Evitar que peers compartilhem arquivos repetidos
R: C
E: A resposta correta é C porque o “optimistic unchoke” substitui o peer menos eficiente por um novo peer aleatório, incentivando a cooperação e descobrindo conexões melhores.

P: No funcionamento do Tor, por que o destino final enxerga apenas o Onion Router #3?
A) Porque os outros nós não participam da criptografia
B) Porque o circuito termina no primeiro roteador
C) Porque o roteamento é direto entre origem e destino
D) Porque o circuito criptografado garante que apenas o último nó se conecte ao destino
R: D
E: A resposta correta é D porque no Tor a comunicação com o destino final ocorre apenas através do último nó da cadeia (Onion Router #3), garantindo que o destino nunca conheça o IP de origem.

P: O que torna possível a navegação anônima na rede Tor?
A) Conexão direta entre cliente e servidor
B) Uso de um único roteador proxy
C) Criação de circuitos criptografados através de vários nós
D) Roteamento estático e IP fixo
R: C
E: A resposta correta é C porque a rede Tor utiliza múltiplos nós intermediários e criptografia em camadas, dificultando que qualquer entidade conheça tanto o remetente quanto o destinatário.

P: Em relação à privacidade, por que protocolos como HTTPS e TLS são considerados insuficientes por si só?
A) Porque são utilizados apenas para e-mails
B) Porque protegem apenas o conteúdo dos dados, mas não os metadados como IPs
C) Porque não utilizam criptografia
D) Porque são facilmente interceptados por roteadores
R: B
E: A resposta correta é B porque, apesar de criptografarem o conteúdo da comunicação, protocolos como HTTPS e TLS não escondem os endereços IP de origem e destino, permitindo o rastreamento.

P: Qual das opções descreve corretamente a função de um ponto de encontro na rede Tor para serviços escondidos?
A) Roteador inicial que define o IP do servidor
B) Local onde se armazenam as chaves criptográficas
C) Nó intermediário que conecta os circuitos do cliente e do servidor
D) Interface gráfica usada para acessar o navegador Tor
R: C
E: A resposta correta é C porque o ponto de encontro é o nó onde os circuitos construídos separadamente pelo cliente e pelo servidor se conectam, mantendo o anonimato de ambas as partes.

P: O que é um “link magnético” na rede BitTorrent (associada ao anonimato em certos contextos)?
A) Link para baixar o Tor Browser
B) Arquivo de texto criptografado
C) Link que usa DHT para encontrar os peers e o arquivo torrent sem depender de tracker
D) Endereço IP protegido com criptografia
R: C
E: A resposta correta é C porque o link magnético permite iniciar downloads sem um arquivo .torrent, utilizando DHT (Distributed Hash Table) para localizar os peers, o que favorece descentralização e anonimato.

P: O que caracteriza um “roteamento aleatorizado” usado como técnica de anonimização?
A) Envia os dados sempre para o mesmo servidor proxy
B) Utiliza roteadores fixos e previsíveis
C) Alterna aleatoriamente os caminhos e os roteadores utilizados, dificultando rastreio da origem
D) Divide os dados em blocos que seguem por caminhos diferentes
R: C
E: A resposta correta é C porque esse tipo de roteamento aleatório utiliza múltiplos caminhos e nós para disfarçar a origem e o destino das mensagens.

P: Qual a principal função dos "serviços escondidos" (.onion) na rede Tor?
A) Permitir downloads automáticos
B) Armazenar o histórico de navegação do usuário
C) Proteger a identidade e localização dos servidores
D) Facilitar a indexação dos sites pelo Google
R: C
E: A resposta correta é C porque os serviços escondidos permitem que servidores hospedem conteúdos sem revelar seu IP, protegendo sua localização física e evitando ataques.

P: No processo de criação de um serviço escondido, o que o servidor faz primeiro?
A) Envia dados diretamente ao cliente
B) Cria rotas onion até pontos de apresentação
C) Solicita um IP fixo para o serviço
D) Publica o conteúdo no navegador padrão
R: B
E: A resposta correta é B porque o servidor estabelece rotas criptografadas até pontos de apresentação antes mesmo de ser descoberto pelo cliente, garantindo anonimato.

P: Como o cliente descobre um serviço escondido (.onion) na rede Tor?
A) Por meio de listas IPs fornecidas por servidores centrais
B) Usando buscadores tradicionais como Google
C) Obtendo descritor de serviço e endereço dos pontos de apresentação via diretório Tor
D) Por meio de broadcast de rede aberta
R: C
E: A resposta correta é C porque o cliente acessa um diretório que contém o descritor do serviço (informações criptografadas e rotas de apresentação) para iniciar a conexão.

P: O que acontece quando o servidor aceita se comunicar com o cliente via Tor?
A) Ele se conecta diretamente ao IP do cliente
B) Ele encerra o circuito criado
C) Ele se conecta ao ponto de encontro criado pelo cliente
D) Ele compartilha todos os metadados com o diretório
R: C
E: A resposta correta é C porque, ao aceitar a comunicação, o servidor se conecta ao ponto de encontro estabelecido pelo cliente, sem que um veja o IP do outro.

P: Por que o modelo de “cebola” (Onion) é usado como metáfora na arquitetura Tor?
A) Porque os dados são coloridos por camadas
B) Porque há várias etapas de verificação manual
C) Porque as mensagens são criptografadas em múltiplas camadas, como uma cebola
D) Porque cada roteador acessa todos os dados de forma transparente
R: C
E: A resposta correta é C porque a estrutura de criptografia em camadas faz com que apenas o nó correspondente possa descriptografar sua camada, garantindo anonimato progressivo.

P: O que caracteriza o conteúdo da Deep Web?
A) Apenas sites ilegais acessados com Tor
B) Sites indexados por buscadores comuns
C) Conteúdos que não são indexados por buscadores tradicionais
D) Todos os sites com domínio .onion
R: C
E: A resposta correta é C porque a Deep Web inclui qualquer conteúdo que, por motivos técnicos ou de acesso restrito, não pode ser acessado por mecanismos de busca convencionais.

P: Qual das opções não é uma característica da Deep Web?
A) Páginas sem links externos
B) Conteúdos dinâmicos gerados por scripts
C) Sites protegidos por login
D) Conteúdo amplamente indexado por crawlers tradicionais
R: D
E: A resposta correta é D porque o conteúdo da Deep Web não é amplamente indexado por crawlers tradicionais, justamente por estar oculto ou protegido por autenticação.

P: Qual o objetivo da utilização de "roteadores onion" na rede Tor?
A) Minimizar o tempo de navegação
B) Reduzir o tráfego de dados da internet
C) Garantir anonimato, passando por diversos nós intermediários
D) Aumentar a largura de banda do usuário final
R: C
E: A resposta correta é C porque os roteadores onion estabelecem múltiplas camadas de criptografia e redirecionamento, dificultando a identificação da origem e destino da mensagem.

P: O que acontece no passo 5 do funcionamento do Tor, após a criação do circuito?
A) O cliente acessa diretamente o destino sem anonimato
B) O circuito é encerrado e os dados são transmitidos via HTTP
C) O cliente acessa o destino final por meio do último nó, que vê apenas o tráfego final
D) Os dados são descriptografados por todos os nós anteriores
R: C
E: A resposta correta é C porque, após o estabelecimento do circuito, o cliente se comunica com o destino final apenas por meio do último nó onion, mantendo o anonimato.

P: O que caracteriza o processo de "tuneiamento" no Tor?
A) A escolha de palavras-chave para acessar serviços escondidos
B) O envio de pacotes diretamente para o destino
C) A extensão do circuito com novas chaves simétricas entre cliente e novos roteadores
D) A reindexação automática de conteúdo da Deep Web
R: C
E: A resposta correta é C porque o tuneiamento ocorre quando o cliente estende o circuito criando novas camadas de criptografia entre ele e outros roteadores onion.

P: Qual dessas afirmações está correta sobre os serviços escondidos no Tor?
A) Eles tornam o IP do cliente visível, mas não do servidor
B) Eles exigem que o cliente saiba a localização física do servidor
C) Eles impedem que cliente e servidor conheçam o IP um do outro
D) Eles exigem um navegador comum, como Google Chrome
R: C
E: A resposta correta é C porque tanto o cliente quanto o servidor permanecem anônimos, sendo conectados via pontos intermediários sem acesso direto aos IPs.

P: O que é um “ponto de encontro” no contexto do Tor?
A) Um servidor público para indexar serviços escondidos
B) Um link que leva à surface web
C) Um nó intermediário que conecta o circuito do cliente com o do servidor
D) Um mecanismo para desviar ataques de DDoS
R: C
E: A resposta correta é C porque o ponto de encontro é o local intermediário onde os circuitos criados separadamente pelo cliente e pelo servidor se conectam.

P: O que impede buscadores como o Google de indexarem o conteúdo da Deep Web?
A) Os sites usam protocolos de segurança como HTTPS
B) Os sites estão em outros idiomas
C) A ausência de links acessíveis ou a exigência de autenticação para acesso
D) O Google não tem interesse em indexar esse conteúdo
R: C
E: A resposta correta é C porque conteúdos gerados dinamicamente, protegidos por login ou sem links externos acessíveis não são rastreados pelos mecanismos de busca tradicionais.

P: Por que a rede Tor é considerada resistente à censura e a ataques de negação de serviço (DDoS)?
A) Porque funciona apenas em sistemas operacionais Linux
B) Porque utiliza técnicas como DHT e Peer Exchange, descentralizando o controle
C) Porque depende exclusivamente de servidores fixos
D) Porque limita a quantidade de conexões simultâneas
R: B
E: A resposta correta é B porque, com mecanismos como DHT e PEX, a rede Tor descentraliza os serviços e reduz os pontos únicos de falha, tornando-a mais resiliente.

P: O que são as tecnologias Crowds e Freenet no contexto da privacidade na internet?
A) Protocolos de login seguro em redes públicas
B) Navegadores que utilizam inteligência artificial
C) Técnicas alternativas ao Onion Routing para anonimato
D) Aplicativos de acesso remoto a redes corporativas
R: C
E: A resposta correta é C porque Crowds e Freenet são exemplos de tecnologias alternativas ao Onion Routing que buscam garantir o anonimato e a privacidade na comunicação digital, funcionando como “anonimizadores” ao dificultar a identificação da origem das mensagens.

P: Por que o anonimato pode ser importante em regimes autoritários ou contextos de censura?
A) Para ocultar a nacionalidade dos usuários
B) Para garantir o direito à liberdade de expressão e proteger denunciantes
C) Para impedir a navegação em sites estrangeiros
D) Para acelerar a conexão com a internet
R: B
E: A resposta correta é B porque em regimes autoritários o anonimato permite que cidadãos possam denunciar abusos, se manifestar contra o governo e evitar represálias. Além disso, protege a localização geográfica e a identidade dos usuários, essenciais em contextos de censura ou vigilância.

P: Qual a estrutura típica de uma mensagem no Onion Routing (modelo “cebola”)?
A) Um texto criptografado com uma única chave pública
B) Uma mensagem dividida em várias partes sem criptografia
C) Uma mensagem com múltiplas camadas de criptografia, uma para cada roteador no caminho
D) Um arquivo XML que redireciona o tráfego automaticamente
R: C
E: A resposta correta é C porque no Onion Routing a mensagem é criptografada em camadas — como uma cebola — onde cada camada é decifrada por um roteador específico no caminho até o destino, mantendo o anonimato da origem e do conteúdo.

P: O que é necessário para que dois computadores se comuniquem usando sockets?
A) Apenas que compartilhem o mesmo sistema operacional
B) Que estejam conectados à internet obrigatoriamente
C) Que tenham IPs e portas acessíveis para troca de dados
D) Que estejam na mesma cidade ou região
R: C
E: A resposta correta é C porque a comunicação por sockets depende de um IP e uma porta aberta em cada dispositivo, permitindo a troca de mensagens de forma direta, mesmo sem internet.

P: Qual é a principal diferença entre enviar uma mensagem de texto e um arquivo via socket?
A) Arquivos são mais leves que mensagens de texto
B) Arquivos podem ser enviados diretamente, sem fragmentação
C) Mensagens de texto exigem protocolo adicional de segurança
D) Arquivos precisam ser fragmentados e reconstruídos na recepção
R: D
E: A resposta correta é D porque, diferentemente das mensagens de texto simples, os arquivos devem ser divididos em partes (pacotes) antes de serem enviados e, no destino, essas partes são reagrupadas para formar o arquivo original.

P: O que caracteriza a comunicação ponto a ponto (P2P) em redes?
A) Os dados passam obrigatoriamente por um servidor central
B) Todos os dados são criptografados de ponta a ponta
C) Os dispositivos se comunicam diretamente entre si
D) Os dados são armazenados na nuvem temporariamente
R: C
E: A resposta correta é C porque, em redes P2P, os dispositivos se conectam diretamente, trocando informações sem a necessidade de um servidor central, como em redes tradicionais cliente-servidor.

P: Qual foi o exemplo prático usado em aula para ilustrar a comunicação via socket?
A) Um sistema bancário com várias contas
B) Um programa de edição de vídeo colaborativa
C) Um chat simples em rede local
D) Um app de rastreamento por GPS
R: C
E: A resposta correta é C porque foi demonstrado um chat em rede local como exemplo básico de uso de sockets, ajudando os alunos a visualizarem como ocorre a troca de dados entre dispositivos.

P: O que é comunicação serial, conforme citado em aula?
A) Quando múltiplos dados são transmitidos ao mesmo tempo em vários canais
B) Um protocolo de roteamento por camadas
C) Um tipo de conexão que envia bits de dados um após o outro em uma única linha
D) Uma conexão que depende exclusivamente de internet
R: C
E: A resposta correta é C porque a comunicação serial transmite os dados em sequência, bit a bit, sendo comum em dispositivos como o Arduino, onde os dados fluem por uma única linha de comunicação.

P: Qual é uma característica típica de uma aplicação P2P como o BitTorrent?
A) Todo tráfego é direcionado para um servidor central para distribuição
B) Cada participante age simultaneamente como cliente e servidor
C) Os arquivos são transmitidos apenas de servidores para clientes
D) Os usuários precisam de uma assinatura paga para enviar arquivos
R: B
E: A resposta correta é B porque no modelo P2P, como no BitTorrent, cada nó pode enviar e receber arquivos, funcionando tanto como cliente quanto como servidor, o que distribui a carga da rede.

P: Em que situação os sockets podem ser utilizados sem internet?
A) Somente se houver conexão com a nuvem
B) Em redes locais, como entre dois computadores conectados por cabo
C) Apenas em redes sem fio com roteadores externos
D) Nunca, pois sockets dependem exclusivamente da internet
R: B
E: A resposta correta é B porque sockets funcionam com base na comunicação entre dispositivos pela rede, podendo ser locais, como entre dois computadores conectados diretamente ou pela mesma rede interna (LAN), sem necessidade de internet.

P: Qual conceito foi utilizado para esconder o IP do servidor e do cliente ao mesmo tempo?
A) Protocolo de Transferência Segura (SFTP)
B) Onion Routing com serviços escondidos do Tor
C) Rede de Distribuição de Conteúdo (CDN)
D) Navegador com modo privado ativado
R: B
E: A resposta correta é B porque o Onion Routing, através do Tor e seus serviços escondidos (.onion), permite que tanto cliente quanto servidor permaneçam anônimos, protegendo seus IPs mesmo durante a comunicação.

P: Qual a diferença entre a Deep Web e a Dark Web segundo os materiais?
A) A Deep Web é acessível por qualquer navegador, a Dark Web não
B) A Deep Web é pública e a Dark Web é privada
C) A Deep Web refere-se a conteúdo não indexado; a Dark Web, a conteúdo anônimo e geralmente acessado por Tor
D) Não há diferença: ambos os termos são sinônimos
R: C
E: A resposta correta é C porque a Deep Web inclui qualquer conteúdo que não é indexado por buscadores, como páginas com login, enquanto a Dark Web é um subconjunto da Deep Web acessado por redes como o Tor e com foco em anonimato.

P: Por que o protocolo do Tor usa múltiplos nós e camadas de criptografia?
A) Para garantir rapidez no tráfego de dados
B) Para baratear o custo do tráfego para os usuários
C) Para garantir anonimato, dificultando o rastreio da origem e destino dos dados
D) Para aumentar o tamanho dos pacotes transmitidos
R: C
E: A resposta correta é C porque o Tor foi projetado para anonimato: cada camada de criptografia é removida por um nó diferente, sem que nenhum deles saiba todo o caminho da comunicação, protegendo origem e destino.

P: O que é um socket no contexto de redes de computadores?
A) Um protocolo para criptografar dados transmitidos
B) Um endereço IP de um servidor específico
C) Um ponto de comunicação entre dois dispositivos em rede
D) Um navegador específico para redes P2P
R: C
E: A resposta correta é C porque um socket funciona como um ponto de conexão para permitir a troca de dados entre dois processos através de uma rede.

P: Qual é a principal diferença entre os protocolos TCP e UDP utilizados em sockets?
A) TCP é mais rápido porque ignora erros
B) UDP exige conexão antes da troca de dados
C) TCP garante entrega e ordem dos dados; UDP não
D) UDP é utilizado exclusivamente em redes locais
R: C
E: A resposta correta é C porque o protocolo TCP garante que os dados cheguem corretamente e na ordem certa, enquanto o UDP é mais rápido, mas não confiável.

P: Qual função do socket em Python é usada para associar um socket a um endereço IP e uma porta?
A) connect()
B) bind()
C) send()
D) listen()
R: B
E: A resposta correta é B porque a função bind() associa o socket a um endereço (IP e porta) no lado do servidor.

P: Em uma comunicação cliente-servidor com socket, qual é a ordem correta das funções no lado do servidor?
A) connect → bind → send → listen
B) listen → accept → connect → bind
C) bind → listen → accept → recv
D) accept → bind → listen → recv
R: C
E: A resposta correta é C porque o servidor primeiro associa o socket (bind), escuta conexões (listen), aceita uma conexão (accept) e depois pode receber dados (recv).

P: Qual é a função do accept() em um socket servidor?
A) Fechar a conexão com o cliente
B) Encaminhar dados ao navegador
C) Aceitar uma conexão de um cliente e retornar um novo socket
D) Iniciar um download
R: C
E: A resposta correta é C porque a função accept() aguarda e aceita uma conexão de entrada, retornando um novo socket para comunicação com o cliente conectado.